{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\InfyExpress (MERN)\\\\infyexpress_frontend\\\\src\\\\Components\\\\MainComponent.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './Home.js';\nimport { connect } from 'react-redux';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport ServicesList from './ServiceList.js';\nimport Service from './Service';\nimport Profile from './Profile';\nimport { fetchService, loginUser, submitQuote, addUser, logoutUser, bookService, fetchBooking } from '../redux/ActionCreators.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function (state) {\n  return {\n    service: state.Service,\n    user: state.User,\n    quote: state.Quote,\n    booking: state.Booking\n  };\n};\n\nvar mapDispatchToProps = function (dispatch) {\n  return {\n    fetchService: () => dispatch(fetchService()),\n    submitQuote: data => dispatch(submitQuote(data)),\n    addUser: creds => dispatch(addUser(creds)),\n    loginUser: creds => dispatch(loginUser(creds)),\n    logoutUser: () => dispatch(logoutUser()),\n    bookService: data => dispatch(bookService(data)),\n    fetchBooking: () => dispatch(fetchBooking()),\n    cancelBooking: () => dispatch(cancelBooking(booking_id))\n  };\n};\n\nclass MainComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.fetchService();\n    this.props.fetchBooking();\n  }\n\n  render() {\n    const ServiceWithId = ({\n      match\n    }) => {\n      if (this.props.service.services.length > 0) {\n        let service = this.props.service.services.filter(service => service._id == match.params.serviceId)[0];\n        if (service) return /*#__PURE__*/_jsxDEV(Service, {\n          service: service,\n          submitQuote: this.props.submitQuote,\n          isError: this.props.quote.error,\n          isSubmitted: this.props.quote.isSubmitted,\n          bookService: this.props.bookService,\n          isBooked: this.props.booking.isBooked,\n          isBookingError: this.props.booking.isError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);else return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 28\n        }, this);\n      } else {\n        return null;\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        authenticated: this.props.user.isAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), this.props.user.isAuthenticated ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            component: () => /*#__PURE__*/_jsxDEV(Register, {\n              authenticated: this.props.user.isAuthenticated,\n              addUser: this.props.addUser,\n              error: this.props.user.err,\n              image: this.props.user.image,\n              isLoading: this.props.user.isLoading,\n              isRegistered: this.props.user.success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: () => /*#__PURE__*/_jsxDEV(Login, {\n              authenticated: this.props.user.isAuthenticated,\n              error: this.props.user.err,\n              loginUser: this.props.loginUser,\n              isLoading: this.props.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/listofservices\",\n          component: () => /*#__PURE__*/_jsxDEV(ServicesList, {\n            services: this.props.service.services\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/listofservices/:serviceId\",\n          component: ServiceWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          component: () => /*#__PURE__*/_jsxDEV(Profile, {\n            logoutUser: this.props.logoutUser,\n            bookings: this.props.booking.isFetched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/Components/MainComponent.js"],"names":["React","Switch","Route","Redirect","withRouter","Home","connect","Login","Register","Header","Footer","ServicesList","Service","Profile","fetchService","loginUser","submitQuote","addUser","logoutUser","bookService","fetchBooking","mapStateToProps","state","service","user","User","quote","Quote","booking","Booking","mapDispatchToProps","dispatch","data","creds","cancelBooking","booking_id","MainComponent","Component","constructor","componentDidMount","props","render","ServiceWithId","match","services","length","filter","_id","params","serviceId","error","isSubmitted","isBooked","isError","isAuthenticated","err","image","isLoading","success","isFetched"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport { connect } from 'react-redux';\r\nimport Login from './Login.js';\r\nimport Register from './Register.js';\r\nimport Header from './Header.js';\r\nimport Footer from './Footer.js';\r\nimport ServicesList from './ServiceList.js';\r\nimport Service from './Service';\r\nimport Profile from './Profile';\r\nimport { fetchService, loginUser, submitQuote, addUser, logoutUser, bookService, fetchBooking } from '../redux/ActionCreators.js';\r\n\r\nvar mapStateToProps = function(state){\r\n    return {\r\n      service : state.Service,\r\n      user : state.User,\r\n      quote : state.Quote,\r\n      booking : state.Booking,\r\n\r\n    };\r\n  }\r\nvar mapDispatchToProps = function(dispatch){\r\n    return {\r\n        fetchService : ()=>dispatch(fetchService()),\r\n        submitQuote :(data)=>dispatch(submitQuote(data)),\r\n        addUser: (creds)=>dispatch(addUser(creds)),\r\n        loginUser : (creds)=>dispatch(loginUser(creds)),\r\n        logoutUser : ()=>dispatch(logoutUser()),\r\n        bookService : (data)=>dispatch(bookService(data)),\r\n        fetchBooking : ()=>dispatch(fetchBooking()),\r\n        cancelBooking : ()=>dispatch(cancelBooking(booking_id))\r\n    }\r\n  }\r\n\r\nclass MainComponent extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={}\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchService();\r\n        this.props.fetchBooking();\r\n    }\r\n\r\n    render(){\r\n        const ServiceWithId = ({match}) => {\r\n            \r\n            if (this.props.service.services.length>0){\r\n                let service = this.props.service.services.filter((service)=> service._id==match.params.serviceId)[0];\r\n                if (service)\r\n                return(\r\n                    <Service    service= {service} \r\n                                submitQuote={this.props.submitQuote}\r\n                                isError = {this.props.quote.error}\r\n                                isSubmitted={this.props.quote.isSubmitted}\r\n                                bookService ={this.props.bookService}\r\n                                isBooked ={this.props.booking.isBooked}\r\n                                isBookingError={this.props.booking.isError}/>\r\n                    )\r\n                else\r\n                    return <Redirect to=\"/\" />\r\n            }\r\n            else{\r\n                    return(null);\r\n            }\r\n            \r\n        };\r\n        return(\r\n            <>\r\n                <Header authenticated={this.props.user.isAuthenticated}\r\n                        />\r\n                <Switch>\r\n                    <Route  exact path=\"/\" \r\n                            component={Home} />\r\n                    {this.props.user.isAuthenticated?null:\r\n                    <>\r\n                    <Route  exact path=\"/register\" \r\n                        component={()=><Register    authenticated ={this.props.user.isAuthenticated}\r\n                                                    addUser ={this.props.addUser}\r\n                                                    error={this.props.user.err}\r\n                                                    image = {this.props.user.image}\r\n                                                    isLoading={this.props.user.isLoading}\r\n                                                    isRegistered={this.props.user.success}/>}/>\r\n                    <Route  exact path=\"/login\" \r\n                        component= {()=><Login  authenticated={this.props.user.isAuthenticated} \r\n                                                error={this.props.user.err} \r\n                                                loginUser={this.props.loginUser}\r\n                                                isLoading={this.props.isLoading}/>} />\r\n                                        </>\r\n                    }\r\n                    <Route  exact path=\"/listofservices\" \r\n                            component={()=><ServicesList\r\n                                            services = {this.props.service.services} \r\n                                            />}/>\r\n                    \r\n                    <Route exact path =\"/listofservices/:serviceId\" \r\n                            component={ServiceWithId}/>\r\n                    <Route exact path=\"/profile\"\r\n                            component={()=><Profile \r\n                                            logoutUser={this.props.logoutUser}  \r\n                                            bookings={this.props.booking.isFetched}/>}/>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));"]},"metadata":{},"sourceType":"module"}