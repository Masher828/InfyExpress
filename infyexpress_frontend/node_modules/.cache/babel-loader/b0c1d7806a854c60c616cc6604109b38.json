{"ast":null,"code":"import { ADD_USER_FAILED, ADD_USER_RECEIVED, ADD_USER_REQUEST, FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST, LOGIN_USER_FAILED, LOGIN_USER_RECEIVED, LOGIN_USER_REQUEST, SUBMIT_QUOTE_FAILED, SUBMIT_QUOTE_RECIEVED, SUBMIT_QUOTE_REQUEST } from \"./ActionType\";\nexport const loginUserRequest = () => {\n  return {\n    type: LOGIN_USER_REQUEST\n  };\n};\nexport const loginUserReceived = details => {\n  return {\n    type: LOGIN_USER_RECEIVED,\n    details\n  };\n};\nexport const loginUserFailed = err => {\n  return {\n    type: LOGIN_USER_FAILED,\n    err\n  };\n};\nexport const loginUser = creds => dispatch => {\n  dispatch(loginUserRequest());\n  fetch('http://localhost:3000/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(creds)\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var err = new Error(response.status);\n      err.response = response;\n      throw err;\n    }\n  }).then(response => response.json()).then(response => {\n    if (response.success) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('creds', response.details);\n      console.log(response);\n      dispatch(loginUserReceived({\n        token: response.token\n      }));\n    } else {\n      dispatch(loginUserFailed({\n        err: err\n      }));\n    }\n  });\n};\nexport const addUserRequest = () => {\n  return {\n    type: ADD_USER_REQUEST\n  };\n};\nexport const addUserReceived = details => {\n  return {\n    type: ADD_USER_RECEIVED,\n    details\n  };\n};\nexport const addUserFailed = err => {\n  return {\n    type: ADD_USER_FAILED,\n    err\n  };\n};\nexport const addUser = creds => dispatch => {\n  dispatch(addUserRequest());\n  fetch('http://localhost:3000/users/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(creds)\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var err = new Error('Error :' + response.status + ': ' + response.statusText);\n      err.response = response;\n      throw err;\n    }\n  }, err => {\n    throw err;\n  }).then(response => response.json()).then(response => {\n    if (response.success) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('creds', response.creds);\n      dispatch(addUserReceived());\n      dispatch(loginUser({\n        username: creds.username,\n        password: creds.password\n      }));\n    } else {\n      dispatch(addUserFailed({\n        err: err\n      }));\n    }\n  }).catch(err => dispatch(addUserFailed(err.message)));\n};\nexport const fetchServiceRequest = () => {\n  return {\n    type: FETCH_SERVICE_REQUEST\n  };\n};\nexport const fetchServiceReceived = services => {\n  return {\n    type: FETCH_SERVICE_RECEIVED,\n    services: services\n  };\n};\nexport const fetchServiceFailed = err => {\n  return {\n    type: FETCH_SERVICE_FAILED,\n    err: err\n  };\n};\nexport const fetchService = () => dispatch => {\n  dispatch(fetchServiceRequest());\n  dispatch(fetchServiceReceived([{\n    _id: \"1\",\n    name: \"International Express\",\n    psize: \"300 cm\",\n    pweight: \"20 kg\",\n    slogan: \"We send packages 'internationally' anywhere in the world, 365 days a year\"\n  }, {\n    _id: \"2\",\n    name: \"Doemstic Express\",\n    psize: \"500 cm\",\n    pweight: \"30 kg\",\n    slogan: \"We send packages 'domestically' anywhere in the India, 365 days a year\"\n  }, {\n    _id: \"3\",\n    name: \"Cold Express\",\n    psize: \"100 cm\",\n    pweight: \"15 kg\",\n    slogan: \"We send 'cold' packages anywhere in the India, 365 days a year\"\n  }, {\n    _id: \"4\",\n    name: \"Mail Express\",\n    psize: \"40 cm\",\n    pweight: \"100 g\",\n    slogan: \"We send 'mailers' and 'letters' anywhere in the India, 365 days a year\"\n  }]));\n};\nexport const submitQuoteRequest = () => {\n  return {\n    type: SUBMIT_QUOTE_REQUEST\n  };\n};\nexport const submitQuoteReceived = data => {\n  return {\n    type: SUBMIT_QUOTE_RECIEVED\n  };\n};\nexport const submitQuoteFailed = err => {\n  return {\n    type: SUBMIT_QUOTE_FAILED,\n    err: err\n  };\n};\nexport const submitQuote = data => dispatch => {\n  dispatch(submitQuoteRequest());\n  dispatch(submitQuoteReceived());\n};","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/redux/ActionCreators.js"],"names":["ADD_USER_FAILED","ADD_USER_RECEIVED","ADD_USER_REQUEST","FETCH_SERVICE_FAILED","FETCH_SERVICE_RECEIVED","FETCH_SERVICE_REQUEST","LOGIN_USER_FAILED","LOGIN_USER_RECEIVED","LOGIN_USER_REQUEST","SUBMIT_QUOTE_FAILED","SUBMIT_QUOTE_RECIEVED","SUBMIT_QUOTE_REQUEST","loginUserRequest","type","loginUserReceived","details","loginUserFailed","err","loginUser","creds","dispatch","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","success","localStorage","setItem","token","console","log","addUserRequest","addUserReceived","addUserFailed","addUser","statusText","username","password","catch","message","fetchServiceRequest","fetchServiceReceived","services","fetchServiceFailed","fetchService","_id","name","psize","pweight","slogan","submitQuoteRequest","submitQuoteReceived","data","submitQuoteFailed","submitQuote"],"mappings":"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","sourcesContent":["import { ADD_USER_FAILED, ADD_USER_RECEIVED, ADD_USER_REQUEST, FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST, LOGIN_USER_FAILED, LOGIN_USER_RECEIVED, LOGIN_USER_REQUEST, SUBMIT_QUOTE_FAILED, SUBMIT_QUOTE_RECIEVED, SUBMIT_QUOTE_REQUEST } from \"./ActionType\"\r\n\r\nexport const loginUserRequest = ()=>{\r\n    return{\r\n        type : LOGIN_USER_REQUEST\r\n    }\r\n};\r\n\r\nexport const loginUserReceived = (details)=>{\r\n    return {\r\n        type : LOGIN_USER_RECEIVED,\r\n        details\r\n    }\r\n};\r\n\r\nexport const loginUserFailed = (err)=>{\r\n    return{\r\n        type : LOGIN_USER_FAILED,\r\n        err\r\n    }\r\n};\r\n\r\nexport const loginUser = (creds)=>(dispatch)=>{\r\n    dispatch(loginUserRequest());\r\n    fetch('http://localhost:3000/users/login',{\r\n        method : 'POST',\r\n        headers : {\r\n            'Content-Type' : \"application/json\"\r\n        },\r\n        body : JSON.stringify(creds)\r\n    })\r\n    .then((response)=>{\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var err= new Error(response.status);\r\n            err.response = response;\r\n            throw err;\r\n        }\r\n    })\r\n    .then((response)=>response.json())\r\n    .then((response)=>{\r\n        if(response.success){\r\n            localStorage.setItem('token',response.token);\r\n            localStorage.setItem('creds',response.details);\r\n            console.log(response)\r\n            dispatch(loginUserReceived({token:response.token}));\r\n        }\r\n        else{\r\n            dispatch(loginUserFailed({err:err}))\r\n        }\r\n    })\r\n}\r\n\r\nexport const addUserRequest = ()=>{\r\n    return{\r\n        type : ADD_USER_REQUEST\r\n    }\r\n};\r\n\r\nexport const addUserReceived = (details)=>{\r\n    return {\r\n        type : ADD_USER_RECEIVED,\r\n        details\r\n    }\r\n};\r\n\r\nexport const addUserFailed = (err)=>{\r\n    return{\r\n        type : ADD_USER_FAILED,\r\n        err\r\n    }\r\n};\r\n\r\nexport const addUser = (creds)=>(dispatch)=>{\r\n    dispatch(addUserRequest());\r\n    fetch('http://localhost:3000/users/signup',{\r\n        method : 'POST',\r\n        headers : {\r\n            'Content-Type' : \"application/json\"\r\n        },\r\n        body : JSON.stringify(creds)\r\n    })\r\n    .then((response)=>{\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var err= new Error('Error :'+response.status+': '+response.statusText);\r\n            err.response = response;\r\n            throw err;\r\n        }\r\n    },(err)=>{throw err})\r\n    .then((response)=>response.json())\r\n    .then((response)=>{\r\n        if(response.success){\r\n            localStorage.setItem('token',response.token);\r\n            localStorage.setItem('creds',response.creds);\r\n            dispatch(addUserReceived());\r\n            dispatch(loginUser({username:creds.username,password:creds.password}));\r\n        }\r\n        else{\r\n            dispatch(addUserFailed({err:err}))\r\n        }\r\n    })\r\n    .catch((err)=>dispatch(addUserFailed(err.message)));\r\n}\r\n\r\nexport const fetchServiceRequest = () =>{\r\n    return{\r\n        type : FETCH_SERVICE_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchServiceReceived = (services) =>{\r\n    return{\r\n        type : FETCH_SERVICE_RECEIVED,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const fetchServiceFailed = (err) =>{\r\n    return{\r\n        type : FETCH_SERVICE_FAILED,\r\n        err : err\r\n    }\r\n}\r\n\r\nexport const fetchService = ()=> (dispatch) =>{\r\n    dispatch(fetchServiceRequest());\r\n    dispatch(fetchServiceReceived([{\r\n        _id: \"1\",\r\n        name : \"International Express\",\r\n        psize : \"300 cm\",\r\n        pweight : \"20 kg\",\r\n        slogan : \"We send packages 'internationally' anywhere in the world, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        name : \"Doemstic Express\",\r\n        psize : \"500 cm\",\r\n        pweight : \"30 kg\",\r\n        slogan : \"We send packages 'domestically' anywhere in the India, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        name : \"Cold Express\",\r\n        psize : \"100 cm\",\r\n        pweight : \"15 kg\",\r\n        slogan : \"We send 'cold' packages anywhere in the India, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"4\",\r\n        name : \"Mail Express\",\r\n        psize : \"40 cm\",\r\n        pweight : \"100 g\",\r\n        slogan : \"We send 'mailers' and 'letters' anywhere in the India, 365 days a year\"\r\n    }]));\r\n}\r\n\r\nexport const submitQuoteRequest = ()=>{\r\n    return{\r\n        type : SUBMIT_QUOTE_REQUEST\r\n    }\r\n}\r\n\r\nexport const submitQuoteReceived = (data)=>{\r\n    return{\r\n        type : SUBMIT_QUOTE_RECIEVED\r\n    }\r\n}\r\n\r\nexport const submitQuoteFailed = (err)=>{\r\n    return{\r\n        type : SUBMIT_QUOTE_FAILED,\r\n        err: err\r\n    }\r\n}\r\n\r\nexport const submitQuote = (data)=>(dispatch)=>{\r\n    dispatch(submitQuoteRequest());\r\n    dispatch(submitQuoteReceived());\r\n}\r\n"]},"metadata":{},"sourceType":"module"}