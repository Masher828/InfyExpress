{"ast":null,"code":"import { FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST } from \"./ActionType\";\nconst initState = {\n  isLoading: false,\n  services: [],\n  err: false\n};\nexport const Service = (state = initState, action) => {\n  switch (action.type) {\n    case FETCH_SERVICE_REQUEST:\n      return Object.assign({}, state, {\n        isLoading: true,\n        err: false\n      });\n\n    case FETCH_SERVICE_RECEIVED:\n      return Object.assign({}, state, {\n        isLoading: false,\n        err: false,\n        services: action.services\n      });\n\n    case FETCH_SERVICE_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n        err: action.err\n      });\n\n    default:\n      return state;\n  }\n};\n_c = Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/redux/Service.js"],"names":["FETCH_SERVICE_FAILED","FETCH_SERVICE_RECEIVED","FETCH_SERVICE_REQUEST","initState","isLoading","services","err","Service","state","action","type","Object","assign"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,sBAA/B,EAAuDC,qBAAvD,QAAoF,cAApF;AAEA,MAAMC,SAAS,GAAG;AAACC,EAAAA,SAAS,EAAG,KAAb;AAAoBC,EAAAA,QAAQ,EAAG,EAA/B;AAAmCC,EAAAA,GAAG,EAAC;AAAvC,CAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAEL,SAAR,EAAkBM,MAAlB,KAA4B;AAC/C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKR,qBAAL;AACI,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACJ,QAAAA,SAAS,EAAC,IAAX;AAAiBE,QAAAA,GAAG,EAAC;AAArB,OAAvB,CAAP;;AAEJ,SAAKL,sBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAwB;AAACJ,QAAAA,SAAS,EAAC,KAAX;AAAkBE,QAAAA,GAAG,EAAC,KAAtB;AAA6BD,QAAAA,QAAQ,EAACI,MAAM,CAACJ;AAA7C,OAAxB,CAAP;;AAEJ,SAAKL,oBAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAwB;AAACJ,QAAAA,SAAS,EAAC,KAAX;AAAkBE,QAAAA,GAAG,EAACG,MAAM,CAACH;AAA7B,OAAxB,CAAP;;AAEJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfM;KAAMD,O","sourcesContent":["import { FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST } from \"./ActionType\";\r\n\r\nconst initState = {isLoading : false, services : [], err:false};\r\nexport const Service = (state= initState,action) =>{\r\n    switch(action.type){\r\n\r\n        case FETCH_SERVICE_REQUEST:\r\n            return Object.assign({},state,{isLoading:true, err:false});\r\n        \r\n        case FETCH_SERVICE_RECEIVED:\r\n            return Object.assign({},state, {isLoading:false, err:false, services:action.services});\r\n        \r\n        case FETCH_SERVICE_FAILED:\r\n            return Object.assign({},state, {isLoading:false, err:action.err});\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}