{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"ImageCompressor\"] = factory();else root[\"ImageCompressor\"] = factory();\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\";\n\n      __webpack_require__.r(__webpack_exports__);\n\n      var EXIF = __webpack_require__(1);\n\n      var WIN = window;\n      var REGEXP_IMAGE_TYPE = /^image\\//;\n      var REGEXP_EXTENSION = /\\.\\w+$/;\n      var util = {};\n      var defaultOptions = {\n        file: null,\n        quality: 0.8,\n        convertSize: 2048000,\n        loose: true,\n        redressOrientation: true\n      };\n      /**\n       * 判断是否为函数\n       * @param {Any} value 任意值\n       * @returns {Boolean} 判断结果\n       */\n\n      var isFunc = function (value) {\n        return typeof value === 'function';\n      };\n      /**\n       * 判断是否为图片类型\n       * @param {String} value 类型字符串\n       * @returns {Boolean} 判断结果\n       */\n\n\n      var isImageType = function (value) {\n        return REGEXP_IMAGE_TYPE.test(value);\n      };\n      /**\n       * 图片类型转化为文件拓展名\n       * @param {String} value\n       */\n\n\n      var imageTypeToExtension = function (value) {\n        var extension = isImageType(value) ? value.substr(6) : '';\n\n        if (extension === 'jpeg') {\n          extension = 'jpg';\n        }\n\n        return '.' + extension;\n      };\n      /**\n       * 图片压缩构造函数\n       * @param {Object} options 相关参数\n       */\n\n\n      function ImageCompressor(options) {\n        options = Object.assign({}, defaultOptions, options);\n        this.options = options;\n        this.file = options.file;\n        this.image = null;\n        this.ParsedOrientationInfo = null;\n        this.init();\n      }\n\n      var _proto = ImageCompressor.prototype; // WIN.ImageCompressor = ImageCompressor;\n\n      /* harmony default export */\n\n      __webpack_exports__[\"default\"] = ImageCompressor;\n      /**\n       * 初始化\n       */\n\n      _proto.init = function () {\n        var _this = this;\n\n        var file = this.file;\n        var options = this.options;\n\n        if (!file || !isImageType(file.type)) {\n          _this.error('请上传图片文件!');\n\n          return;\n        }\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        util.file2Image(file, function (img) {\n          if (isFunc(_this.beforeCompress)) {\n            _this.image = img;\n            file.width = img.naturalWidth;\n            file.height = img.naturalHeight;\n\n            _this.beforeCompress(file);\n          }\n\n          if (file.type === 'image/jpeg' && options.redressOrientation) {\n            _this.getParsedOrientationInfo(img, function (info) {\n              _this.parsedOrientationInfo = info;\n\n              _this.rendCanvas();\n            });\n          } else {\n            _this.parsedOrientationInfo = {\n              rotate: 0,\n              scaleX: 1,\n              scaleY: 1\n            };\n\n            _this.rendCanvas();\n          }\n        }, _this.error);\n      };\n      /**\n       * `Canvas` 渲染模块\n       */\n\n\n      _proto.rendCanvas = function () {\n        var _this = this;\n\n        var options = this.options;\n        var image = this.image;\n        var edge = this.getExpectedEdge();\n        var dWidth = edge.dWidth;\n        var dHeight = edge.dHeight;\n        var width = edge.width;\n        var height = edge.height;\n        var canvas = util.image2Canvas(image, dWidth, dHeight, _this.beforeDraw.bind(_this), _this.afterDraw.bind(_this), width, height);\n        util.canvas2Blob(canvas, function (blob) {\n          if (blob) {\n            blob.width = canvas.width;\n            blob.height = canvas.height;\n          }\n\n          _this.success(blob);\n        }, options.quality, options.mimeType);\n      };\n      /**\n       * 压缩之前，读取图片之后钩子函数\n       */\n\n\n      _proto.beforeCompress = function () {\n        if (isFunc(this.options.beforeCompress)) {\n          this.options.beforeCompress(this.file);\n        }\n      };\n      /**\n       * 获取用户想要输出的边（宽高）\n       */\n\n\n      _proto.getExpectedEdge = function () {\n        var image = this.image;\n        var parsedOrientationInfo = this.parsedOrientationInfo;\n        var rotate = parsedOrientationInfo.rotate;\n        var options = this.options;\n        var naturalWidth = image.naturalWidth;\n        var naturalHeight = image.naturalHeight;\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var temp;\n\n        if (is90DegreesRotated) {\n          temp = naturalHeight;\n          naturalHeight = naturalWidth;\n          naturalWidth = temp;\n        }\n\n        var aspectRatio = naturalWidth / naturalHeight;\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var width = Math.max(options.width, 0) || naturalWidth;\n        var height = Math.max(options.height, 0) || naturalHeight;\n\n        if (maxWidth < Infinity && maxHeight < Infinity) {\n          if (maxHeight * aspectRatio > maxWidth) {\n            maxHeight = maxWidth / aspectRatio;\n          } else {\n            maxWidth = maxHeight * aspectRatio;\n          }\n        } else if (maxWidth < Infinity) {\n          maxHeight = maxWidth / aspectRatio;\n        } else if (maxHeight < Infinity) {\n          maxWidth = maxHeight * aspectRatio;\n        }\n\n        if (minWidth > 0 && minHeight > 0) {\n          if (minHeight * aspectRatio > minWidth) {\n            minHeight = minWidth / aspectRatio;\n          } else {\n            minWidth = minHeight * aspectRatio;\n          }\n        } else if (minWidth > 0) {\n          minHeight = minWidth / aspectRatio;\n        } else if (minHeight > 0) {\n          minWidth = minHeight * aspectRatio;\n        }\n\n        if (height * aspectRatio > width) {\n          height = width / aspectRatio;\n        } else {\n          width = height * aspectRatio;\n        }\n\n        width = Math.floor(Math.min(Math.max(width, minWidth), maxWidth));\n        height = Math.floor(Math.min(Math.max(height, minHeight), maxHeight));\n        var dWidth = width;\n        var dHeight = height;\n\n        if (is90DegreesRotated) {\n          temp = dHeight;\n          dHeight = dWidth;\n          dWidth = temp;\n        }\n\n        return {\n          dWidth: dWidth,\n          dHeight: dHeight,\n          width: width,\n          height: height\n        };\n      };\n      /**\n       * 获取转化后的方向信息\n       * @param {File} img 图片对象\n       * @param {Function} callback 回调函数\n       */\n\n\n      _proto.getParsedOrientationInfo = function (img, callback) {\n        var _this = this;\n\n        this.getOrientation(img, function (orientation) {\n          if (isFunc(callback)) {\n            callback(_this.parseOrientation(orientation));\n          }\n        });\n      };\n      /**\n       * 获取方向\n       * @param {File} img 图片对象\n       * @param {Function} callback 回调函数\n       */\n\n\n      _proto.getOrientation = function (img, callback) {\n        EXIF.getData(img, function () {\n          var orientation = EXIF.getTag(this, 'Orientation');\n\n          if (isFunc(callback)) {\n            callback(orientation);\n          }\n        });\n      };\n      /**\n       * 逆向转化Exif获取到图片的方向信息\n       * @param {Number} orientation 方向标识\n       * @returns {Object} 转化结果\n       */\n\n\n      _proto.parseOrientation = function (orientation) {\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        switch (orientation) {\n          // 水平翻转\n          case 2:\n            scaleX = -1;\n            break;\n          // 向左旋转180°\n\n          case 3:\n            rotate = -180;\n            break;\n          // 垂直翻转\n\n          case 4:\n            scaleY = -1;\n            break;\n          // 垂直翻转并且向右旋转90°\n\n          case 5:\n            rotate = 90;\n            scaleY = -1;\n            break;\n          // 向右旋转90°\n\n          case 6:\n            rotate = 90;\n            break;\n          // 水平翻转并且向右旋转90°\n\n          case 7:\n            rotate = 90;\n            scaleX = -1;\n            break;\n          // 向左旋转90°\n\n          case 8:\n            rotate = -90;\n            break;\n\n          default:\n            break;\n        }\n\n        return {\n          rotate: rotate,\n          scaleX: scaleX,\n          scaleY: scaleY\n        };\n      };\n      /**\n       * 画布上绘制图片前的一些操作：设置画布一些样式，支持用户自定义\n       * @param {CanvasRenderingContext2D} ctx Canvas 对象的上下文\n       * @param {HTMLCanvasElement} canvas Canvas 对象\n       */\n\n\n      _proto.beforeDraw = function (ctx, canvas) {\n        var parsedOrientationInfo = this.parsedOrientationInfo;\n        var rotate = parsedOrientationInfo.rotate;\n        var scaleX = parsedOrientationInfo.scaleX;\n        var scaleY = parsedOrientationInfo.scaleY;\n        var file = this.file;\n        var options = this.options;\n        var fillStyle = 'transparent';\n        var width = canvas.width;\n        var height = canvas.height; // `png` 格式图片大小超过 `convertSize`, 转化成 `jpeg` 格式\n\n        if (file.size > options.convertSize && options.mimeType === 'image/png') {\n          fillStyle = '#fff';\n          options.mimeType = 'image/jpeg';\n        } // 覆盖默认的黑色填充色\n\n\n        ctx.fillStyle = fillStyle;\n        ctx.fillRect(0, 0, width, height); // 用户自定义画布样式\n\n        if (isFunc(options.beforeDraw)) {\n          options.beforeDraw.call(this, ctx, canvas);\n        }\n\n        ctx.save();\n\n        switch (rotate) {\n          case 90:\n            ctx.translate(width, 0);\n            break;\n\n          case -90:\n            ctx.translate(0, height);\n            break;\n\n          case -180:\n            ctx.translate(width, height);\n            break;\n        }\n\n        ctx.rotate(rotate * Math.PI / 180);\n        ctx.scale(scaleX, scaleY);\n      };\n      /**\n       * 画布上绘制图片后的一些操作：支持用户自定义\n       * @param {CanvasRenderingContext2D} ctx Canvas 对象的上下文\n       * @param {HTMLCanvasElement} canvas Canvas 对象\n       */\n\n\n      _proto.afterDraw = function (ctx, canvas) {\n        var options = this.options; // 用户自定义画布样式\n\n        if (isFunc(options.afterDraw)) {\n          options.afterDraw.call(this, ctx, canvas);\n        }\n      };\n      /**\n       * 错误触发函数\n       * @param {String} msg 错误消息\n       */\n\n\n      _proto.error = function (msg) {\n        var options = this.options;\n\n        if (isFunc(options.error)) {\n          options.error.call(this, msg);\n        } else {\n          throw new Error(msg);\n        }\n      };\n      /**\n       * 成功触发函数\n       * @param {File|Blob} result `Blob` 对象\n       */\n\n\n      _proto.success = function (result) {\n        var options = this.options;\n        var file = this.file;\n        var image = this.image;\n        var edge = this.getExpectedEdge();\n        var naturalHeight = image.naturalHeight;\n        var naturalWidth = image.naturalWidth;\n\n        if (result && result.size) {\n          // 在非宽松模式下，用户期待的输出宽高没有大于源图片的宽高情况下，输出文件大小大于源文件，返回源文件\n          if (!options.loose && result.size > file.size && !(edge.width > naturalWidth || edge.height > naturalHeight)) {\n            console.warn('当前设置的是非宽松模式，压缩结果大于源图片，输出源图片');\n            result = file;\n          } else {\n            const date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // 文件 `name` 属性中的后缀转化成实际后缀\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // 在某些情况下压缩后文件为 `null`，返回源文件\n          console.warn('图片压缩出了点意外，输出源图片');\n          result = file;\n        }\n\n        if (isFunc(options.success)) {\n          options.success.call(this, result);\n        }\n      };\n      /**\n      * 文件转化成 `data URL` 字符串\n      * @param {File} file 文件对象\n      * @param {Function} callback 成功回调函数\n      * @param {Function} error 取消回调函数\n      */\n\n\n      util.file2DataUrl = function (file, callback, error) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          callback(reader.result);\n        };\n\n        reader.onerror = function () {\n          if (isFunc(error)) {\n            error('读取文件失败！');\n          }\n        };\n\n        reader.readAsDataURL(file);\n      };\n      /**\n       * 文件转化成 `Image` 对象\n       * @param {File} file 文件对象\n       * @param {Function} callback 成功回调函数\n       * @param {Function} error 错误回调函数\n       */\n\n\n      util.file2Image = function (file, callback, error) {\n        var image = new Image();\n        var URL = WIN.URL || WIN.webkitURL;\n\n        if (WIN.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WIN.navigator.userAgent)) {\n          // 修复IOS上webkit内核浏览器抛出错误 `The operation is insecure` 问题\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n\n        image.onerror = function () {\n          if (isFunc(error)) {\n            error('图片加载错误！');\n          }\n        };\n\n        if (URL) {\n          var url = URL.createObjectURL(file);\n\n          image.onload = function () {\n            callback(image);\n            URL.revokeObjectURL(url);\n          };\n\n          image.src = url;\n        } else {\n          this.file2DataUrl(file, function (dataUrl) {\n            image.onload = function () {\n              callback(image);\n            };\n\n            image.src = dataUrl;\n          }, error);\n        }\n      };\n      /**\n       * `url` 转化成 `Image` 对象\n       * @param {File} url `url`\n       * @param {Function} callback 成功回调函数\n       * @param {Function} error 失败回调函数\n       */\n\n\n      util.url2Image = function (url, callback, error) {\n        var image = new Image();\n        image.src = url;\n\n        image.onload = function () {\n          callback(image);\n        };\n\n        image.onerror = function () {\n          if (isFunc(error)) {\n            error('图片加载错误！');\n          }\n        };\n      };\n      /**\n       * `Image` 转化成 `Canvas` 对象\n       * @param {File} image `Image` 对象\n       * @param {Number} dWidth 目标宽度\n       * @param {Number} dHeight 目标高度\n       * @param {Function} beforeDraw 在图片绘画之前的回调函数\n       * @param {Function} afterDraw 在图片绘画之后的回调函数\n       * @param {Number} width 宽\n       * @param {Number} height 高\n       * @return {HTMLCanvasElement} `Canvas` 对象\n       */\n\n\n      util.image2Canvas = function (image, dWidth, dHeight, beforeDraw, afterDraw, width, height) {\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        canvas.width = width || image.naturalWidth;\n        canvas.height = height || image.naturalHeight;\n\n        if (isFunc(beforeDraw)) {\n          beforeDraw(ctx, canvas);\n        }\n\n        ctx.save();\n        ctx.drawImage(image, 0, 0, dWidth, dHeight);\n        ctx.restore();\n\n        if (isFunc(afterDraw)) {\n          afterDraw(ctx, canvas);\n        }\n\n        return canvas;\n      };\n      /**\n       * `Canvas` 转化成 `data URL` 对象\n       * @param {File} file  `Canvas` 对象\n       * @param {Float} quality 输出质量比例\n       * @return {String} `data URL` 字符串\n       */\n\n\n      util.canvas2DataUrl = function (canvas, quality, type) {\n        return canvas.toDataURL(type || 'image/jpeg', quality);\n      };\n      /**\n       * `data URL` 转化成 `Image` 对象\n       * @param {File} dataUrl `data URL` 字符串\n       * @param {Function} callback 成功回调函数\n       * @param {Function} error 失败回调函数\n       */\n\n\n      util.dataUrl2Image = function (dataUrl, callback, error) {\n        var image = new Image();\n\n        image.onload = function () {\n          callback(image);\n        };\n\n        image.error = function () {\n          if (isFunc(error)) {\n            error('图片加载错误！');\n          }\n        };\n\n        image.src = dataUrl;\n      };\n      /**\n       * `data URL` 转化成 `Blob` 对象\n       * @param {File} dataUrl `data URL` 字符串\n       * @param {String} type `mime`\n       * @return {Blob} `Blob` 对象\n       */\n\n\n      util.dataUrl2Blob = function (dataUrl, type) {\n        var data = dataUrl.split(',')[1];\n        var mimePattern = /^data:(.*?)(;base64)?,/;\n        var mime = dataUrl.match(mimePattern)[1];\n        var binStr = atob(data);\n        var len = data.length;\n        var arr = new Uint8Array(len);\n\n        for (var i = 0; i < len; i++) {\n          arr[i] = binStr.charCodeAt(i);\n        }\n\n        return new Blob([arr], {\n          type: type || mime\n        });\n      };\n      /**\n       * `Blob` 对象转化成 `data URL`\n       * @param {Blob} blob `Blob` 对象\n       * @param {Function} callback 成功回调函数\n       * @param {Function} error 失败回调函数\n       */\n\n\n      util.blob2DataUrl = function (blob, callback, error) {\n        this.file2DataUrl(blob, callback, error);\n      };\n      /**\n       * `Blob`对象 转化成 `Image` 对象\n       * @param {Blob} blob `Blob` 对象\n       * @param {Function} callback 成功回调函数\n       * @param {Function} callback 失败回调函数\n       */\n\n\n      util.blob2Image = function (blob, callback, error) {\n        this.file2Image(blob, callback, error);\n      };\n      /**\n       * `Canvas` 对象转化成 `Blob` 对象\n       * @param {HTMLCanvasElement} canvas `Canvas` 对象\n       * @param {Function} callback 回调函数\n       * @param {Float} quality 输出质量比例\n       * @param {String} type `mime`\n       */\n\n\n      util.canvas2Blob = function (canvas, callback, quality, type) {\n        var _this = this;\n\n        if (!HTMLCanvasElement.prototype.toBlob) {\n          Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n            value: function (callback, type, quality) {\n              let dataUrl = this.toDataURL(type, quality);\n              callback(_this.dataUrl2Blob(dataUrl));\n            }\n          });\n        }\n\n        canvas.toBlob(function (blob) {\n          callback(blob);\n        }, type || 'image/jpeg', quality || 0.8);\n      };\n      /**\n       * 文件上传\n       * @param {String} url 上传路径\n       * @param {File} file 文件对象\n       * @param {Function} callback 回调函数\n       */\n\n\n      util.upload = function (url, file, callback) {\n        var xhr = new XMLHttpRequest();\n        var fd = new FormData();\n        fd.append('file', file);\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            // 上传成功\n            callback && callback(xhr.responseText);\n          } else {\n            throw new Error(xhr);\n          }\n        };\n\n        xhr.open('POST', url, true);\n        xhr.send(fd);\n      };\n\n      for (var key in util) {\n        if (util.hasOwnProperty(key)) {\n          ImageCompressor[key] = util[key];\n        }\n      }\n      /***/\n\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n      (function () {\n        var debug = false;\n        var root = this;\n\n        var EXIF = function (obj) {\n          if (obj instanceof EXIF) return obj;\n          if (!(this instanceof EXIF)) return new EXIF(obj);\n          this.EXIFwrapped = obj;\n        };\n\n        if (true) {\n          if (true && module.exports) {\n            exports = module.exports = EXIF;\n          }\n\n          exports.EXIF = EXIF;\n        } else {}\n\n        var ExifTags = EXIF.Tags = {\n          // version tags\n          0x9000: \"ExifVersion\",\n          // EXIF version\n          0xA000: \"FlashpixVersion\",\n          // Flashpix format version\n          // colorspace tags\n          0xA001: \"ColorSpace\",\n          // Color space information tag\n          // image configuration\n          0xA002: \"PixelXDimension\",\n          // Valid width of meaningful image\n          0xA003: \"PixelYDimension\",\n          // Valid height of meaningful image\n          0x9101: \"ComponentsConfiguration\",\n          // Information about channels\n          0x9102: \"CompressedBitsPerPixel\",\n          // Compressed bits per pixel\n          // user information\n          0x927C: \"MakerNote\",\n          // Any desired information written by the manufacturer\n          0x9286: \"UserComment\",\n          // Comments by user\n          // related file\n          0xA004: \"RelatedSoundFile\",\n          // Name of related sound file\n          // date and time\n          0x9003: \"DateTimeOriginal\",\n          // Date and time when the original image was generated\n          0x9004: \"DateTimeDigitized\",\n          // Date and time when the image was stored digitally\n          0x9290: \"SubsecTime\",\n          // Fractions of seconds for DateTime\n          0x9291: \"SubsecTimeOriginal\",\n          // Fractions of seconds for DateTimeOriginal\n          0x9292: \"SubsecTimeDigitized\",\n          // Fractions of seconds for DateTimeDigitized\n          // picture-taking conditions\n          0x829A: \"ExposureTime\",\n          // Exposure time (in seconds)\n          0x829D: \"FNumber\",\n          // F number\n          0x8822: \"ExposureProgram\",\n          // Exposure program\n          0x8824: \"SpectralSensitivity\",\n          // Spectral sensitivity\n          0x8827: \"ISOSpeedRatings\",\n          // ISO speed rating\n          0x8828: \"OECF\",\n          // Optoelectric conversion factor\n          0x9201: \"ShutterSpeedValue\",\n          // Shutter speed\n          0x9202: \"ApertureValue\",\n          // Lens aperture\n          0x9203: \"BrightnessValue\",\n          // Value of brightness\n          0x9204: \"ExposureBias\",\n          // Exposure bias\n          0x9205: \"MaxApertureValue\",\n          // Smallest F number of lens\n          0x9206: \"SubjectDistance\",\n          // Distance to subject in meters\n          0x9207: \"MeteringMode\",\n          // Metering mode\n          0x9208: \"LightSource\",\n          // Kind of light source\n          0x9209: \"Flash\",\n          // Flash status\n          0x9214: \"SubjectArea\",\n          // Location and area of main subject\n          0x920A: \"FocalLength\",\n          // Focal length of the lens in mm\n          0xA20B: \"FlashEnergy\",\n          // Strobe energy in BCPS\n          0xA20C: \"SpatialFrequencyResponse\",\n          //\n          0xA20E: \"FocalPlaneXResolution\",\n          // Number of pixels in width direction per FocalPlaneResolutionUnit\n          0xA20F: \"FocalPlaneYResolution\",\n          // Number of pixels in height direction per FocalPlaneResolutionUnit\n          0xA210: \"FocalPlaneResolutionUnit\",\n          // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n          0xA214: \"SubjectLocation\",\n          // Location of subject in image\n          0xA215: \"ExposureIndex\",\n          // Exposure index selected on camera\n          0xA217: \"SensingMethod\",\n          // Image sensor type\n          0xA300: \"FileSource\",\n          // Image source (3 == DSC)\n          0xA301: \"SceneType\",\n          // Scene type (1 == directly photographed)\n          0xA302: \"CFAPattern\",\n          // Color filter array geometric pattern\n          0xA401: \"CustomRendered\",\n          // Special processing\n          0xA402: \"ExposureMode\",\n          // Exposure mode\n          0xA403: \"WhiteBalance\",\n          // 1 = auto white balance, 2 = manual\n          0xA404: \"DigitalZoomRation\",\n          // Digital zoom ratio\n          0xA405: \"FocalLengthIn35mmFilm\",\n          // Equivalent foacl length assuming 35mm film camera (in mm)\n          0xA406: \"SceneCaptureType\",\n          // Type of scene\n          0xA407: \"GainControl\",\n          // Degree of overall image gain adjustment\n          0xA408: \"Contrast\",\n          // Direction of contrast processing applied by camera\n          0xA409: \"Saturation\",\n          // Direction of saturation processing applied by camera\n          0xA40A: \"Sharpness\",\n          // Direction of sharpness processing applied by camera\n          0xA40B: \"DeviceSettingDescription\",\n          //\n          0xA40C: \"SubjectDistanceRange\",\n          // Distance to subject\n          // other tags\n          0xA005: \"InteroperabilityIFDPointer\",\n          0xA420: \"ImageUniqueID\" // Identifier assigned uniquely to each image\n\n        };\n        var TiffTags = EXIF.TiffTags = {\n          0x0100: \"ImageWidth\",\n          0x0101: \"ImageHeight\",\n          0x8769: \"ExifIFDPointer\",\n          0x8825: \"GPSInfoIFDPointer\",\n          0xA005: \"InteroperabilityIFDPointer\",\n          0x0102: \"BitsPerSample\",\n          0x0103: \"Compression\",\n          0x0106: \"PhotometricInterpretation\",\n          0x0112: \"Orientation\",\n          0x0115: \"SamplesPerPixel\",\n          0x011C: \"PlanarConfiguration\",\n          0x0212: \"YCbCrSubSampling\",\n          0x0213: \"YCbCrPositioning\",\n          0x011A: \"XResolution\",\n          0x011B: \"YResolution\",\n          0x0128: \"ResolutionUnit\",\n          0x0111: \"StripOffsets\",\n          0x0116: \"RowsPerStrip\",\n          0x0117: \"StripByteCounts\",\n          0x0201: \"JPEGInterchangeFormat\",\n          0x0202: \"JPEGInterchangeFormatLength\",\n          0x012D: \"TransferFunction\",\n          0x013E: \"WhitePoint\",\n          0x013F: \"PrimaryChromaticities\",\n          0x0211: \"YCbCrCoefficients\",\n          0x0214: \"ReferenceBlackWhite\",\n          0x0132: \"DateTime\",\n          0x010E: \"ImageDescription\",\n          0x010F: \"Make\",\n          0x0110: \"Model\",\n          0x0131: \"Software\",\n          0x013B: \"Artist\",\n          0x8298: \"Copyright\"\n        };\n        var GPSTags = EXIF.GPSTags = {\n          0x0000: \"GPSVersionID\",\n          0x0001: \"GPSLatitudeRef\",\n          0x0002: \"GPSLatitude\",\n          0x0003: \"GPSLongitudeRef\",\n          0x0004: \"GPSLongitude\",\n          0x0005: \"GPSAltitudeRef\",\n          0x0006: \"GPSAltitude\",\n          0x0007: \"GPSTimeStamp\",\n          0x0008: \"GPSSatellites\",\n          0x0009: \"GPSStatus\",\n          0x000A: \"GPSMeasureMode\",\n          0x000B: \"GPSDOP\",\n          0x000C: \"GPSSpeedRef\",\n          0x000D: \"GPSSpeed\",\n          0x000E: \"GPSTrackRef\",\n          0x000F: \"GPSTrack\",\n          0x0010: \"GPSImgDirectionRef\",\n          0x0011: \"GPSImgDirection\",\n          0x0012: \"GPSMapDatum\",\n          0x0013: \"GPSDestLatitudeRef\",\n          0x0014: \"GPSDestLatitude\",\n          0x0015: \"GPSDestLongitudeRef\",\n          0x0016: \"GPSDestLongitude\",\n          0x0017: \"GPSDestBearingRef\",\n          0x0018: \"GPSDestBearing\",\n          0x0019: \"GPSDestDistanceRef\",\n          0x001A: \"GPSDestDistance\",\n          0x001B: \"GPSProcessingMethod\",\n          0x001C: \"GPSAreaInformation\",\n          0x001D: \"GPSDateStamp\",\n          0x001E: \"GPSDifferential\"\n        }; // EXIF 2.3 Spec\n\n        var IFD1Tags = EXIF.IFD1Tags = {\n          0x0100: \"ImageWidth\",\n          0x0101: \"ImageHeight\",\n          0x0102: \"BitsPerSample\",\n          0x0103: \"Compression\",\n          0x0106: \"PhotometricInterpretation\",\n          0x0111: \"StripOffsets\",\n          0x0112: \"Orientation\",\n          0x0115: \"SamplesPerPixel\",\n          0x0116: \"RowsPerStrip\",\n          0x0117: \"StripByteCounts\",\n          0x011A: \"XResolution\",\n          0x011B: \"YResolution\",\n          0x011C: \"PlanarConfiguration\",\n          0x0128: \"ResolutionUnit\",\n          0x0201: \"JpegIFOffset\",\n          // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n          0x0202: \"JpegIFByteCount\",\n          // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n          0x0211: \"YCbCrCoefficients\",\n          0x0212: \"YCbCrSubSampling\",\n          0x0213: \"YCbCrPositioning\",\n          0x0214: \"ReferenceBlackWhite\"\n        };\n        var StringValues = EXIF.StringValues = {\n          ExposureProgram: {\n            0: \"Not defined\",\n            1: \"Manual\",\n            2: \"Normal program\",\n            3: \"Aperture priority\",\n            4: \"Shutter priority\",\n            5: \"Creative program\",\n            6: \"Action program\",\n            7: \"Portrait mode\",\n            8: \"Landscape mode\"\n          },\n          MeteringMode: {\n            0: \"Unknown\",\n            1: \"Average\",\n            2: \"CenterWeightedAverage\",\n            3: \"Spot\",\n            4: \"MultiSpot\",\n            5: \"Pattern\",\n            6: \"Partial\",\n            255: \"Other\"\n          },\n          LightSource: {\n            0: \"Unknown\",\n            1: \"Daylight\",\n            2: \"Fluorescent\",\n            3: \"Tungsten (incandescent light)\",\n            4: \"Flash\",\n            9: \"Fine weather\",\n            10: \"Cloudy weather\",\n            11: \"Shade\",\n            12: \"Daylight fluorescent (D 5700 - 7100K)\",\n            13: \"Day white fluorescent (N 4600 - 5400K)\",\n            14: \"Cool white fluorescent (W 3900 - 4500K)\",\n            15: \"White fluorescent (WW 3200 - 3700K)\",\n            17: \"Standard light A\",\n            18: \"Standard light B\",\n            19: \"Standard light C\",\n            20: \"D55\",\n            21: \"D65\",\n            22: \"D75\",\n            23: \"D50\",\n            24: \"ISO studio tungsten\",\n            255: \"Other\"\n          },\n          Flash: {\n            0x0000: \"Flash did not fire\",\n            0x0001: \"Flash fired\",\n            0x0005: \"Strobe return light not detected\",\n            0x0007: \"Strobe return light detected\",\n            0x0009: \"Flash fired, compulsory flash mode\",\n            0x000D: \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F: \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010: \"Flash did not fire, compulsory flash mode\",\n            0x0018: \"Flash did not fire, auto mode\",\n            0x0019: \"Flash fired, auto mode\",\n            0x001D: \"Flash fired, auto mode, return light not detected\",\n            0x001F: \"Flash fired, auto mode, return light detected\",\n            0x0020: \"No flash function\",\n            0x0041: \"Flash fired, red-eye reduction mode\",\n            0x0045: \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047: \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049: \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059: \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D: \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F: \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n          },\n          SensingMethod: {\n            1: \"Not defined\",\n            2: \"One-chip color area sensor\",\n            3: \"Two-chip color area sensor\",\n            4: \"Three-chip color area sensor\",\n            5: \"Color sequential area sensor\",\n            7: \"Trilinear sensor\",\n            8: \"Color sequential linear sensor\"\n          },\n          SceneCaptureType: {\n            0: \"Standard\",\n            1: \"Landscape\",\n            2: \"Portrait\",\n            3: \"Night scene\"\n          },\n          SceneType: {\n            1: \"Directly photographed\"\n          },\n          CustomRendered: {\n            0: \"Normal process\",\n            1: \"Custom process\"\n          },\n          WhiteBalance: {\n            0: \"Auto white balance\",\n            1: \"Manual white balance\"\n          },\n          GainControl: {\n            0: \"None\",\n            1: \"Low gain up\",\n            2: \"High gain up\",\n            3: \"Low gain down\",\n            4: \"High gain down\"\n          },\n          Contrast: {\n            0: \"Normal\",\n            1: \"Soft\",\n            2: \"Hard\"\n          },\n          Saturation: {\n            0: \"Normal\",\n            1: \"Low saturation\",\n            2: \"High saturation\"\n          },\n          Sharpness: {\n            0: \"Normal\",\n            1: \"Soft\",\n            2: \"Hard\"\n          },\n          SubjectDistanceRange: {\n            0: \"Unknown\",\n            1: \"Macro\",\n            2: \"Close view\",\n            3: \"Distant view\"\n          },\n          FileSource: {\n            3: \"DSC\"\n          },\n          Components: {\n            0: \"\",\n            1: \"Y\",\n            2: \"Cb\",\n            3: \"Cr\",\n            4: \"R\",\n            5: \"G\",\n            6: \"B\"\n          }\n        };\n\n        function addEvent(element, event, handler) {\n          if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n          } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n          }\n        }\n\n        function imageHasData(img) {\n          return !!img.exifdata;\n        }\n\n        function base64ToArrayBuffer(base64, contentType) {\n          contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n\n          base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n          var binary = atob(base64);\n          var len = binary.length;\n          var buffer = new ArrayBuffer(len);\n          var view = new Uint8Array(buffer);\n\n          for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n          }\n\n          return buffer;\n        }\n\n        function objectURLToBlob(url, callback) {\n          var http = new XMLHttpRequest();\n          http.open(\"GET\", url, true);\n          http.responseType = \"blob\";\n\n          http.onload = function (e) {\n            if (this.status == 200 || this.status === 0) {\n              callback(this.response);\n            }\n          };\n\n          http.send();\n        }\n\n        function getImageData(img, callback) {\n          function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n\n            if (EXIF.isXmpEnabled) {\n              var xmpdata = findXMPinJPEG(binFile);\n              img.xmpdata = xmpdata || {};\n            }\n\n            if (callback) {\n              callback.call(img);\n            }\n          }\n\n          if (img.src) {\n            if (/^data\\:/i.test(img.src)) {\n              // Data URI\n              var arrayBuffer = base64ToArrayBuffer(img.src);\n              handleBinaryFile(arrayBuffer);\n            } else if (/^blob\\:/i.test(img.src)) {\n              // Object URL\n              var fileReader = new FileReader();\n\n              fileReader.onload = function (e) {\n                handleBinaryFile(e.target.result);\n              };\n\n              objectURLToBlob(img.src, function (blob) {\n                fileReader.readAsArrayBuffer(blob);\n              });\n            } else {\n              var http = new XMLHttpRequest();\n\n              http.onload = function () {\n                if (this.status == 200 || this.status === 0) {\n                  handleBinaryFile(http.response);\n                } else {\n                  throw \"Could not load image\";\n                }\n\n                http = null;\n              };\n\n              http.open(\"GET\", img.src, true);\n              http.responseType = \"arraybuffer\";\n              http.send(null);\n            }\n          } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n\n            fileReader.onload = function (e) {\n              if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n              handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n          }\n        }\n\n        function findEXIFinJPEG(file) {\n          var dataView = new DataView(file);\n          if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n          if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n          }\n\n          var offset = 2,\n              length = file.byteLength,\n              marker;\n\n          while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n              if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n              return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker); // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n              if (debug) console.log(\"Found 0xFFE1 marker\");\n              return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2); // offset += 2 + file.getShortAt(offset+2, true);\n            } else {\n              offset += 2 + dataView.getUint16(offset + 2);\n            }\n          }\n        }\n\n        function findIPTCinJPEG(file) {\n          var dataView = new DataView(file);\n          if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n          if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n          }\n\n          var offset = 2,\n              length = file.byteLength;\n\n          var isFieldSegmentStart = function (dataView, offset) {\n            return dataView.getUint8(offset) === 0x38 && dataView.getUint8(offset + 1) === 0x42 && dataView.getUint8(offset + 2) === 0x49 && dataView.getUint8(offset + 3) === 0x4D && dataView.getUint8(offset + 4) === 0x04 && dataView.getUint8(offset + 5) === 0x04;\n          };\n\n          while (offset < length) {\n            if (isFieldSegmentStart(dataView, offset)) {\n              // Get the length of the name header (which is padded to an even number of bytes)\n              var nameHeaderLength = dataView.getUint8(offset + 7);\n              if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1; // Check for pre photoshop 6 format\n\n              if (nameHeaderLength === 0) {\n                // Always 4\n                nameHeaderLength = 4;\n              }\n\n              var startOffset = offset + 8 + nameHeaderLength;\n              var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n              return readIPTCData(file, startOffset, sectionLength);\n              break;\n            } // Not the marker, continue searching\n\n\n            offset++;\n          }\n        }\n\n        var IptcFieldMap = {\n          0x78: 'caption',\n          0x6E: 'credit',\n          0x19: 'keywords',\n          0x37: 'dateCreated',\n          0x50: 'byline',\n          0x55: 'bylineTitle',\n          0x7A: 'captionWriter',\n          0x69: 'headline',\n          0x74: 'copyright',\n          0x0F: 'category'\n        };\n\n        function readIPTCData(file, startOffset, sectionLength) {\n          var dataView = new DataView(file);\n          var data = {};\n          var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n          var segmentStartPos = startOffset;\n\n          while (segmentStartPos < startOffset + sectionLength) {\n            if (dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n              segmentType = dataView.getUint8(segmentStartPos + 2);\n\n              if (segmentType in IptcFieldMap) {\n                dataSize = dataView.getInt16(segmentStartPos + 3);\n                segmentSize = dataSize + 5;\n                fieldName = IptcFieldMap[segmentType];\n                fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize); // Check if we already stored a value with this name\n\n                if (data.hasOwnProperty(fieldName)) {\n                  // Value already stored with this name, create multivalue field\n                  if (data[fieldName] instanceof Array) {\n                    data[fieldName].push(fieldValue);\n                  } else {\n                    data[fieldName] = [data[fieldName], fieldValue];\n                  }\n                } else {\n                  data[fieldName] = fieldValue;\n                }\n              }\n            }\n\n            segmentStartPos++;\n          }\n\n          return data;\n        }\n\n        function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n          var entries = file.getUint16(dirStart, !bigEnd),\n              tags = {},\n              entryOffset,\n              tag,\n              i;\n\n          for (i = 0; i < entries; i++) {\n            entryOffset = dirStart + i * 12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n          }\n\n          return tags;\n        }\n\n        function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n          var type = file.getUint16(entryOffset + 2, !bigEnd),\n              numValues = file.getUint32(entryOffset + 4, !bigEnd),\n              valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart,\n              offset,\n              vals,\n              val,\n              n,\n              numerator,\n              denominator;\n\n          switch (type) {\n            case 1: // byte, 8-bit unsigned int\n\n            case 7:\n              // undefined, 8-bit byte, value depending on field\n              if (numValues == 1) {\n                return file.getUint8(entryOffset + 8, !bigEnd);\n              } else {\n                offset = numValues > 4 ? valueOffset : entryOffset + 8;\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  vals[n] = file.getUint8(offset + n);\n                }\n\n                return vals;\n              }\n\n            case 2:\n              // ascii, 8-bit byte\n              offset = numValues > 4 ? valueOffset : entryOffset + 8;\n              return getStringFromDB(file, offset, numValues - 1);\n\n            case 3:\n              // short, 16 bit int\n              if (numValues == 1) {\n                return file.getUint16(entryOffset + 8, !bigEnd);\n              } else {\n                offset = numValues > 2 ? valueOffset : entryOffset + 8;\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n                }\n\n                return vals;\n              }\n\n            case 4:\n              // long, 32 bit int\n              if (numValues == 1) {\n                return file.getUint32(entryOffset + 8, !bigEnd);\n              } else {\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n                }\n\n                return vals;\n              }\n\n            case 5:\n              // rational = two long values, first is numerator, second is denominator\n              if (numValues == 1) {\n                numerator = file.getUint32(valueOffset, !bigEnd);\n                denominator = file.getUint32(valueOffset + 4, !bigEnd);\n                val = new Number(numerator / denominator);\n                val.numerator = numerator;\n                val.denominator = denominator;\n                return val;\n              } else {\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n                  denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n                  vals[n] = new Number(numerator / denominator);\n                  vals[n].numerator = numerator;\n                  vals[n].denominator = denominator;\n                }\n\n                return vals;\n              }\n\n            case 9:\n              // slong, 32 bit signed int\n              if (numValues == 1) {\n                return file.getInt32(entryOffset + 8, !bigEnd);\n              } else {\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n                }\n\n                return vals;\n              }\n\n            case 10:\n              // signed rational, two slongs, first is numerator, second is denominator\n              if (numValues == 1) {\n                return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n              } else {\n                vals = [];\n\n                for (n = 0; n < numValues; n++) {\n                  vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n                }\n\n                return vals;\n              }\n\n          }\n        }\n        /**\n        * Given an IFD (Image File Directory) start offset\n        * returns an offset to next IFD or 0 if it's the last IFD.\n        */\n\n\n        function getNextIFDOffset(dataView, dirStart, bigEnd) {\n          //the first 2bytes means the number of directory entries contains in this IFD\n          var entries = dataView.getUint16(dirStart, !bigEnd); // After last directory entry, there is a 4bytes of data,\n          // it means an offset to next IFD.\n          // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n          return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n        }\n\n        function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd) {\n          // get the IFD1 offset\n          var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart + firstIFDOffset, bigEnd);\n\n          if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n          } else if (IFD1OffsetPointer > dataView.byteLength) {\n            // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n          } // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n\n          var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd); // EXIF 2.3 specification for JPEG format thumbnail\n          // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n          // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n          // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n          // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n          // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n          if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n            switch (thumbTags['Compression']) {\n              case 6:\n                // console.log('Thumbnail image format is JPEG');\n                if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                  // extract the thumbnail\n                  var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                  var tLength = thumbTags.JpegIFByteCount;\n                  thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                    type: 'image/jpeg'\n                  });\n                }\n\n                break;\n\n              case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n\n              default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n          } else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n          }\n\n          return thumbTags;\n        }\n\n        function getStringFromDB(buffer, start, length) {\n          var outstr = \"\";\n\n          for (n = start; n < start + length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n          }\n\n          return outstr;\n        }\n\n        function readEXIFData(file, start) {\n          if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n          }\n\n          var bigEnd,\n              tags,\n              tag,\n              exifData,\n              gpsData,\n              tiffOffset = start + 6; // test for TIFF validity and endianness\n\n          if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n          } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n          } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n          }\n\n          if (file.getUint16(tiffOffset + 2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n          }\n\n          var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n          if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset + 4, !bigEnd));\n            return false;\n          }\n\n          tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n          if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n\n            for (tag in exifData) {\n              switch (tag) {\n                case \"LightSource\":\n                case \"Flash\":\n                case \"MeteringMode\":\n                case \"ExposureProgram\":\n                case \"SensingMethod\":\n                case \"SceneCaptureType\":\n                case \"SceneType\":\n                case \"CustomRendered\":\n                case \"WhiteBalance\":\n                case \"GainControl\":\n                case \"Contrast\":\n                case \"Saturation\":\n                case \"Sharpness\":\n                case \"SubjectDistanceRange\":\n                case \"FileSource\":\n                  exifData[tag] = StringValues[tag][exifData[tag]];\n                  break;\n\n                case \"ExifVersion\":\n                case \"FlashpixVersion\":\n                  exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                  break;\n\n                case \"ComponentsConfiguration\":\n                  exifData[tag] = StringValues.Components[exifData[tag][0]] + StringValues.Components[exifData[tag][1]] + StringValues.Components[exifData[tag][2]] + StringValues.Components[exifData[tag][3]];\n                  break;\n              }\n\n              tags[tag] = exifData[tag];\n            }\n          }\n\n          if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n\n            for (tag in gpsData) {\n              switch (tag) {\n                case \"GPSVersionID\":\n                  gpsData[tag] = gpsData[tag][0] + \".\" + gpsData[tag][1] + \".\" + gpsData[tag][2] + \".\" + gpsData[tag][3];\n                  break;\n              }\n\n              tags[tag] = gpsData[tag];\n            }\n          } // extract thumbnail\n\n\n          tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n          return tags;\n        }\n\n        function findXMPinJPEG(file) {\n          if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n          }\n\n          var dataView = new DataView(file);\n          if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n          if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n          }\n\n          var offset = 2,\n              length = file.byteLength,\n              dom = new DOMParser();\n\n          while (offset < length - 4) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n              var startOffset = offset - 1;\n              var sectionLength = dataView.getUint16(offset - 2) - 1;\n              var xmpString = getStringFromDB(dataView, startOffset, sectionLength);\n              var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n              xmpString = xmpString.substring(xmpString.indexOf('<x:xmpmeta'), xmpEndIndex);\n              var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10; //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n              //Without these namespaces, XML is thought to be invalid by parsers\n\n              xmpString = xmpString.slice(0, indexOfXmp) + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" ' + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" ' + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" ' + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" ' + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" ' + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" ' + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" ' + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" ' + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" ' + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" ' + xmpString.slice(indexOfXmp);\n              var domDocument = dom.parseFromString(xmpString, 'text/xml');\n              return xml2Object(domDocument);\n            } else {\n              offset++;\n            }\n          }\n        }\n\n        function xml2json(xml) {\n          var json = {};\n\n          if (xml.nodeType == 1) {\n            // element node\n            if (xml.attributes.length > 0) {\n              json['@attributes'] = {};\n\n              for (var j = 0; j < xml.attributes.length; j++) {\n                var attribute = xml.attributes.item(j);\n                json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n              }\n            }\n          } else if (xml.nodeType == 3) {\n            // text node\n            return xml.nodeValue;\n          } // deal with children\n\n\n          if (xml.hasChildNodes()) {\n            for (var i = 0; i < xml.childNodes.length; i++) {\n              var child = xml.childNodes.item(i);\n              var nodeName = child.nodeName;\n\n              if (json[nodeName] == null) {\n                json[nodeName] = xml2json(child);\n              } else {\n                if (json[nodeName].push == null) {\n                  var old = json[nodeName];\n                  json[nodeName] = [];\n                  json[nodeName].push(old);\n                }\n\n                json[nodeName].push(xml2json(child));\n              }\n            }\n          }\n\n          return json;\n        }\n\n        function xml2Object(xml) {\n          try {\n            var obj = {};\n\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n\n                for (var idx in attributes) {\n                  var itemAtt = attributes[idx];\n                  var dataKey = itemAtt.nodeName;\n                  var dataValue = itemAtt.nodeValue;\n\n                  if (dataKey !== undefined) {\n                    obj[dataKey] = dataValue;\n                  }\n                }\n\n                var nodeName = item.nodeName;\n\n                if (typeof obj[nodeName] == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof obj[nodeName].push == \"undefined\") {\n                    var old = obj[nodeName];\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n\n            return obj;\n          } catch (e) {\n            console.log(e.message);\n          }\n        }\n\n        EXIF.enableXmp = function () {\n          EXIF.isXmpEnabled = true;\n        };\n\n        EXIF.disableXmp = function () {\n          EXIF.isXmpEnabled = false;\n        };\n\n        EXIF.getData = function (img, callback) {\n          if ((self.Image && img instanceof self.Image || self.HTMLImageElement && img instanceof self.HTMLImageElement) && !img.complete) return false;\n\n          if (!imageHasData(img)) {\n            getImageData(img, callback);\n          } else {\n            if (callback) {\n              callback.call(img);\n            }\n          }\n\n          return true;\n        };\n\n        EXIF.getTag = function (img, tag) {\n          if (!imageHasData(img)) return;\n          return img.exifdata[tag];\n        };\n\n        EXIF.getIptcTag = function (img, tag) {\n          if (!imageHasData(img)) return;\n          return img.iptcdata[tag];\n        };\n\n        EXIF.getAllTags = function (img) {\n          if (!imageHasData(img)) return {};\n          var a,\n              data = img.exifdata,\n              tags = {};\n\n          for (a in data) {\n            if (data.hasOwnProperty(a)) {\n              tags[a] = data[a];\n            }\n          }\n\n          return tags;\n        };\n\n        EXIF.getAllIptcTags = function (img) {\n          if (!imageHasData(img)) return {};\n          var a,\n              data = img.iptcdata,\n              tags = {};\n\n          for (a in data) {\n            if (data.hasOwnProperty(a)) {\n              tags[a] = data[a];\n            }\n          }\n\n          return tags;\n        };\n\n        EXIF.pretty = function (img) {\n          if (!imageHasData(img)) return \"\";\n          var a,\n              data = img.exifdata,\n              strPretty = \"\";\n\n          for (a in data) {\n            if (data.hasOwnProperty(a)) {\n              if (typeof data[a] == \"object\") {\n                if (data[a] instanceof Number) {\n                  strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                } else {\n                  strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                }\n              } else {\n                strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n              }\n            }\n          }\n\n          return strPretty;\n        };\n\n        EXIF.readFromBinaryFile = function (file) {\n          return findEXIFinJPEG(file);\n        };\n\n        if (true) {\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return EXIF;\n          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        }\n      }).call(this);\n      /***/\n    }\n    /******/\n    ])[\"default\"]\n  );\n});","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/node_modules/js-image-compressor/dist/image-compressor.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","EXIF","WIN","REGEXP_IMAGE_TYPE","REGEXP_EXTENSION","util","defaultOptions","file","quality","convertSize","loose","redressOrientation","isFunc","isImageType","test","imageTypeToExtension","extension","substr","ImageCompressor","options","assign","image","ParsedOrientationInfo","init","_proto","_this","type","error","mimeType","file2Image","img","beforeCompress","width","naturalWidth","height","naturalHeight","getParsedOrientationInfo","info","parsedOrientationInfo","rendCanvas","rotate","scaleX","scaleY","edge","getExpectedEdge","dWidth","dHeight","canvas","image2Canvas","beforeDraw","afterDraw","canvas2Blob","blob","success","is90DegreesRotated","Math","abs","temp","aspectRatio","maxWidth","max","Infinity","maxHeight","minWidth","minHeight","floor","min","callback","getOrientation","orientation","parseOrientation","getData","getTag","ctx","fillStyle","size","fillRect","save","translate","PI","scale","msg","Error","result","console","warn","date","Date","lastModified","getTime","lastModifiedDate","replace","file2DataUrl","reader","FileReader","onload","onerror","readAsDataURL","Image","URL","webkitURL","navigator","userAgent","crossOrigin","alt","url","createObjectURL","revokeObjectURL","src","dataUrl","url2Image","document","createElement","getContext","drawImage","restore","canvas2DataUrl","toDataURL","dataUrl2Image","dataUrl2Blob","data","split","mimePattern","mime","match","binStr","atob","len","length","arr","Uint8Array","charCodeAt","Blob","blob2DataUrl","blob2Image","HTMLCanvasElement","toBlob","upload","xhr","XMLHttpRequest","fd","FormData","append","onreadystatechange","readyState","status","responseText","open","send","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","debug","obj","EXIFwrapped","ExifTags","Tags","TiffTags","GPSTags","IFD1Tags","StringValues","ExposureProgram","MeteringMode","LightSource","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","addEvent","element","event","handler","addEventListener","attachEvent","imageHasData","exifdata","base64ToArrayBuffer","base64","contentType","binary","buffer","ArrayBuffer","view","objectURLToBlob","http","responseType","e","response","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","iptcdata","findIPTCinJPEG","isXmpEnabled","xmpdata","findXMPinJPEG","arrayBuffer","fileReader","target","readAsArrayBuffer","self","File","log","byteLength","dataView","DataView","getUint8","offset","marker","readEXIFData","getUint16","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","readIPTCData","IptcFieldMap","fieldValue","fieldName","dataSize","segmentType","segmentSize","segmentStartPos","getInt16","getStringFromDB","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entries","tags","entryOffset","tag","readTagValue","numValues","getUint32","valueOffset","vals","val","numerator","denominator","Number","getInt32","getNextIFDOffset","readThumbnailImage","firstIFDOffset","IFD1OffsetPointer","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","ExifIFDPointer","GPSInfoIFDPointer","dom","DOMParser","xmpString","xmpEndIndex","indexOf","substring","indexOfXmp","slice","domDocument","parseFromString","xml2Object","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","message","enableXmp","disableXmp","HTMLImageElement","complete","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ImageCompressor\"] = factory();\n\telse\n\t\troot[\"ImageCompressor\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nvar EXIF = __webpack_require__(1);\nvar WIN = window;\nvar REGEXP_IMAGE_TYPE = /^image\\//;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\nvar util = {};\nvar defaultOptions = {\n  file: null,\n  quality: 0.8,\n  convertSize: 2048000,\n  loose: true,\n  redressOrientation: true\n};\n\n/**\n * 判断是否为函数\n * @param {Any} value 任意值\n * @returns {Boolean} 判断结果\n */\nvar isFunc = function (value) {\n  return typeof value === 'function';\n};\n\n/**\n * 判断是否为图片类型\n * @param {String} value 类型字符串\n * @returns {Boolean} 判断结果\n */\nvar isImageType = function (value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n};\n\n/**\n * 图片类型转化为文件拓展名\n * @param {String} value\n */\nvar imageTypeToExtension = function (value) {\n  var extension = isImageType(value) ? value.substr(6) : '';\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n  return '.' + extension;\n}\n\n/**\n * 图片压缩构造函数\n * @param {Object} options 相关参数\n */\nfunction ImageCompressor(options) {\n  options = Object.assign({}, defaultOptions, options);\n  this.options = options;\n  this.file = options.file;\n  this.image = null;\n  this.ParsedOrientationInfo = null;\n  this.init();\n}\n\nvar _proto = ImageCompressor.prototype;\n// WIN.ImageCompressor = ImageCompressor;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImageCompressor);\n\n/**\n * 初始化\n */\n_proto.init = function () {\n  var _this = this;\n  var file = this.file;\n  var options = this.options;\n\n  if (!file || !isImageType(file.type)) {\n    _this.error('请上传图片文件!');\n    return;\n  }\n\n  if (!isImageType(options.mimeType)) {\n    options.mimeType = file.type;\n  }\n\n  util.file2Image(file, function (img) {\n    if (isFunc(_this.beforeCompress)) {\n      _this.image = img;\n      file.width = img.naturalWidth;\n      file.height = img.naturalHeight;\n      _this.beforeCompress(file);\n    }\n\n    if (file.type === 'image/jpeg' && options.redressOrientation) {\n      _this.getParsedOrientationInfo(img, function (info) {\n        _this.parsedOrientationInfo = info;\n        _this.rendCanvas();\n      })\n    } else {\n      _this.parsedOrientationInfo = {\n        rotate: 0,\n        scaleX: 1,\n        scaleY: 1\n      };\n      _this.rendCanvas();\n    }\n  }, _this.error)\n}\n\n/**\n * `Canvas` 渲染模块\n */\n_proto.rendCanvas = function () {\n  var _this = this;\n  var options = this.options;\n  var image = this.image;\n  var edge = this.getExpectedEdge();\n  var dWidth = edge.dWidth;\n  var dHeight = edge.dHeight;\n  var width = edge.width;\n  var height = edge.height;\n\n  var canvas = util.image2Canvas(image, dWidth, dHeight, _this.beforeDraw.bind(_this), _this.afterDraw.bind(_this), width, height);\n\n  util.canvas2Blob(canvas, function (blob) {\n    if (blob) {\n      blob.width = canvas.width;\n      blob.height = canvas.height;\n    }\n    _this.success(blob);\n  }, options.quality, options.mimeType)\n}\n\n/**\n * 压缩之前，读取图片之后钩子函数\n */\n_proto.beforeCompress = function () {\n  if (isFunc(this.options.beforeCompress)) {\n    this.options.beforeCompress(this.file);\n  }\n}\n\n/**\n * 获取用户想要输出的边（宽高）\n */\n_proto.getExpectedEdge = function () {\n  var image = this.image;\n  var parsedOrientationInfo = this.parsedOrientationInfo;\n  var rotate = parsedOrientationInfo.rotate;\n  var options = this.options;\n  var naturalWidth = image.naturalWidth;\n  var naturalHeight = image.naturalHeight;\n\n  var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n  var temp;\n\n  if (is90DegreesRotated) {\n    temp = naturalHeight;\n    naturalHeight = naturalWidth;\n    naturalWidth = temp;\n  }\n\n  var aspectRatio = naturalWidth / naturalHeight;\n  var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n  var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n  var minWidth = Math.max(options.minWidth, 0) || 0;\n  var minHeight = Math.max(options.minHeight, 0) || 0;\n  var width = Math.max(options.width, 0) || naturalWidth;\n  var height = Math.max(options.height, 0) || naturalHeight;\n\n  if (maxWidth < Infinity && maxHeight < Infinity) {\n    if (maxHeight * aspectRatio > maxWidth) {\n      maxHeight = maxWidth / aspectRatio;\n    } else {\n      maxWidth = maxHeight * aspectRatio;\n    }\n  } else if (maxWidth < Infinity) {\n    maxHeight = maxWidth / aspectRatio;\n  } else if (maxHeight < Infinity) {\n    maxWidth = maxHeight * aspectRatio;\n  }\n\n  if (minWidth > 0 && minHeight > 0) {\n    if (minHeight * aspectRatio > minWidth) {\n      minHeight = minWidth / aspectRatio;\n    } else {\n      minWidth = minHeight * aspectRatio;\n    }\n  } else if (minWidth > 0) {\n    minHeight = minWidth / aspectRatio;\n  } else if (minHeight > 0) {\n    minWidth = minHeight * aspectRatio;\n  }\n\n  if (height * aspectRatio > width) {\n    height = width / aspectRatio;\n  } else {\n    width = height * aspectRatio;\n  }\n\n  width = Math.floor(Math.min(Math.max(width, minWidth), maxWidth));\n  height = Math.floor(Math.min(Math.max(height, minHeight), maxHeight));\n\n  var dWidth = width;\n  var dHeight = height;\n\n  if (is90DegreesRotated) {\n    temp = dHeight;\n    dHeight = dWidth;\n    dWidth = temp;\n  }\n\n  return {\n    dWidth: dWidth,\n    dHeight: dHeight,\n    width: width,\n    height: height\n  }\n}\n\n/**\n * 获取转化后的方向信息\n * @param {File} img 图片对象\n * @param {Function} callback 回调函数\n */\n_proto.getParsedOrientationInfo = function (img, callback) {\n  var _this = this;\n\n  this.getOrientation(img, function (orientation) {\n    if (isFunc(callback)) {\n      callback(_this.parseOrientation(orientation));\n    }\n  })\n}\n\n/**\n * 获取方向\n * @param {File} img 图片对象\n * @param {Function} callback 回调函数\n */\n_proto.getOrientation = function (img, callback) {\n  EXIF.getData(img, function () {\n    var orientation = EXIF.getTag(this, 'Orientation');\n    if (isFunc(callback)) {\n      callback(orientation);\n    }\n  })\n}\n\n/**\n * 逆向转化Exif获取到图片的方向信息\n * @param {Number} orientation 方向标识\n * @returns {Object} 转化结果\n */\n_proto.parseOrientation = function (orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // 水平翻转\n    case 2:\n      scaleX = -1;\n      break;\n    // 向左旋转180°\n    case 3:\n      rotate = -180;\n      break;\n    // 垂直翻转\n    case 4:\n      scaleY = -1;\n      break;\n    // 垂直翻转并且向右旋转90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // 向右旋转90°\n    case 6:\n      rotate = 90;\n      break;\n    // 水平翻转并且向右旋转90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // 向左旋转90°\n    case 8:\n      rotate = -90;\n      break;\n    default:\n      break;\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\n/**\n * 画布上绘制图片前的一些操作：设置画布一些样式，支持用户自定义\n * @param {CanvasRenderingContext2D} ctx Canvas 对象的上下文\n * @param {HTMLCanvasElement} canvas Canvas 对象\n */\n_proto.beforeDraw = function (ctx, canvas) {\n  var parsedOrientationInfo = this.parsedOrientationInfo;\n  var rotate = parsedOrientationInfo.rotate;\n  var scaleX = parsedOrientationInfo.scaleX;\n  var scaleY = parsedOrientationInfo.scaleY;\n  var file = this.file;\n  var options = this.options;\n  var fillStyle = 'transparent';\n  var width = canvas.width;\n  var height = canvas.height;\n\n  // `png` 格式图片大小超过 `convertSize`, 转化成 `jpeg` 格式\n  if (file.size > options.convertSize && options.mimeType === 'image/png') {\n    fillStyle = '#fff';\n    options.mimeType = 'image/jpeg';\n  }\n\n  // 覆盖默认的黑色填充色\n  ctx.fillStyle = fillStyle;\n  ctx.fillRect(0, 0, width, height);\n\n  // 用户自定义画布样式\n  if (isFunc(options.beforeDraw)) {\n    options.beforeDraw.call(this, ctx, canvas);\n  }\n\n  ctx.save();\n\n  switch (rotate) {\n    case 90:\n      ctx.translate(width, 0);\n      break;\n    case -90:\n      ctx.translate(0, height);\n      break;\n    case -180:\n      ctx.translate(width, height);\n      break;\n  }\n\n  ctx.rotate((rotate * Math.PI) / 180);\n  ctx.scale(scaleX, scaleY);\n}\n\n/**\n * 画布上绘制图片后的一些操作：支持用户自定义\n * @param {CanvasRenderingContext2D} ctx Canvas 对象的上下文\n * @param {HTMLCanvasElement} canvas Canvas 对象\n */\n_proto.afterDraw = function (ctx, canvas) {\n  var options = this.options;\n  // 用户自定义画布样式\n  if (isFunc(options.afterDraw)) {\n    options.afterDraw.call(this, ctx, canvas);\n  }\n}\n\n/**\n * 错误触发函数\n * @param {String} msg 错误消息\n */\n_proto.error = function (msg) {\n  var options = this.options;\n  if (isFunc(options.error)) {\n    options.error.call(this, msg);\n  } else {\n    throw new Error(msg);\n  }\n}\n\n/**\n * 成功触发函数\n * @param {File|Blob} result `Blob` 对象\n */\n_proto.success = function (result) {\n  var options = this.options;\n  var file = this.file;\n  var image = this.image;\n  var edge = this.getExpectedEdge();\n  var naturalHeight = image.naturalHeight;\n  var naturalWidth = image.naturalWidth;\n\n  if (result && result.size) {\n    // 在非宽松模式下，用户期待的输出宽高没有大于源图片的宽高情况下，输出文件大小大于源文件，返回源文件\n    if (!options.loose && result.size > file.size && !(\n      edge.width > naturalWidth\n      || edge.height > naturalHeight\n    )) {\n      console.warn('当前设置的是非宽松模式，压缩结果大于源图片，输出源图片');\n      result = file;\n    } else {\n      const date = new Date();\n\n      result.lastModified = date.getTime();\n      result.lastModifiedDate = date;\n      result.name = file.name;\n\n      // 文件 `name` 属性中的后缀转化成实际后缀\n      if (result.name && result.type !== file.type) {\n        result.name = result.name.replace(\n          REGEXP_EXTENSION,\n          imageTypeToExtension(result.type)\n        );\n      }\n    }\n  } else {\n    // 在某些情况下压缩后文件为 `null`，返回源文件\n    console.warn('图片压缩出了点意外，输出源图片');\n    result = file;\n  }\n\n  if (isFunc(options.success)) {\n    options.success.call(this, result);\n  }\n}\n\n/**\n* 文件转化成 `data URL` 字符串\n* @param {File} file 文件对象\n* @param {Function} callback 成功回调函数\n* @param {Function} error 取消回调函数\n*/\nutil.file2DataUrl = function (file, callback, error) {\n  var reader = new FileReader();\n  reader.onload = function () {\n    callback(reader.result);\n  };\n  reader.onerror = function () {\n    if (isFunc(error)) {\n      error('读取文件失败！');\n    }\n  };\n  reader.readAsDataURL(file);\n}\n\n/**\n * 文件转化成 `Image` 对象\n * @param {File} file 文件对象\n * @param {Function} callback 成功回调函数\n * @param {Function} error 错误回调函数\n */\nutil.file2Image = function (file, callback, error) {\n  var image = new Image();\n  var URL = WIN.URL || WIN.webkitURL;\n\n  if (WIN.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WIN.navigator.userAgent)) {\n    // 修复IOS上webkit内核浏览器抛出错误 `The operation is insecure` 问题\n    image.crossOrigin = 'anonymous';\n  }\n\n  image.alt = file.name;\n  image.onerror = function () {\n    if (isFunc(error)) {\n      error('图片加载错误！');\n    }\n  }\n\n  if (URL) {\n    var url = URL.createObjectURL(file);\n    image.onload = function () {\n      callback(image);\n      URL.revokeObjectURL(url);\n    };\n    image.src = url;\n  } else {\n    this.file2DataUrl(file, function (dataUrl) {\n      image.onload = function () {\n        callback(image);\n      }\n      image.src = dataUrl;\n    }, error);\n  }\n}\n\n/**\n * `url` 转化成 `Image` 对象\n * @param {File} url `url`\n * @param {Function} callback 成功回调函数\n * @param {Function} error 失败回调函数\n */\nutil.url2Image = function (url, callback, error) {\n  var image = new Image();\n  image.src = url;\n  image.onload = function () {\n    callback(image);\n  };\n  image.onerror = function () {\n    if (isFunc(error)) {\n      error('图片加载错误！');\n    }\n  }\n}\n\n/**\n * `Image` 转化成 `Canvas` 对象\n * @param {File} image `Image` 对象\n * @param {Number} dWidth 目标宽度\n * @param {Number} dHeight 目标高度\n * @param {Function} beforeDraw 在图片绘画之前的回调函数\n * @param {Function} afterDraw 在图片绘画之后的回调函数\n * @param {Number} width 宽\n * @param {Number} height 高\n * @return {HTMLCanvasElement} `Canvas` 对象\n */\nutil.image2Canvas = function (image, dWidth, dHeight, beforeDraw, afterDraw, width, height) {\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n  canvas.width = width || image.naturalWidth;\n  canvas.height = height || image.naturalHeight;\n  if (isFunc(beforeDraw)) {\n    beforeDraw(ctx, canvas);\n  }\n  ctx.save();\n  ctx.drawImage(image, 0, 0, dWidth, dHeight);\n  ctx.restore();\n  if (isFunc(afterDraw)) {\n    afterDraw(ctx, canvas);\n  }\n  return canvas;\n}\n\n/**\n * `Canvas` 转化成 `data URL` 对象\n * @param {File} file  `Canvas` 对象\n * @param {Float} quality 输出质量比例\n * @return {String} `data URL` 字符串\n */\nutil.canvas2DataUrl = function (canvas, quality, type) {\n  return canvas.toDataURL(type || 'image/jpeg', quality);\n}\n\n/**\n * `data URL` 转化成 `Image` 对象\n * @param {File} dataUrl `data URL` 字符串\n * @param {Function} callback 成功回调函数\n * @param {Function} error 失败回调函数\n */\nutil.dataUrl2Image = function (dataUrl, callback, error) {\n  var image = new Image();\n  image.onload = function () {\n    callback(image);\n  };\n  image.error = function () {\n    if (isFunc(error)) {\n      error('图片加载错误！');\n    }\n  }\n  image.src = dataUrl;\n}\n\n/**\n * `data URL` 转化成 `Blob` 对象\n * @param {File} dataUrl `data URL` 字符串\n * @param {String} type `mime`\n * @return {Blob} `Blob` 对象\n */\nutil.dataUrl2Blob = function (dataUrl, type) {\n  var data = dataUrl.split(',')[1];\n  var mimePattern = /^data:(.*?)(;base64)?,/;\n  var mime = dataUrl.match(mimePattern)[1];\n  var binStr = atob(data);\n  var len = data.length;\n  var arr = new Uint8Array(len);\n\n  for (var i = 0; i < len; i++) {\n    arr[i] = binStr.charCodeAt(i);\n  }\n  return new Blob([arr], { type: type || mime });\n}\n\n/**\n * `Blob` 对象转化成 `data URL`\n * @param {Blob} blob `Blob` 对象\n * @param {Function} callback 成功回调函数\n * @param {Function} error 失败回调函数\n */\nutil.blob2DataUrl = function (blob, callback, error) {\n  this.file2DataUrl(blob, callback, error);\n}\n\n/**\n * `Blob`对象 转化成 `Image` 对象\n * @param {Blob} blob `Blob` 对象\n * @param {Function} callback 成功回调函数\n * @param {Function} callback 失败回调函数\n */\nutil.blob2Image = function (blob, callback, error) {\n  this.file2Image(blob, callback, error);\n}\n\n/**\n * `Canvas` 对象转化成 `Blob` 对象\n * @param {HTMLCanvasElement} canvas `Canvas` 对象\n * @param {Function} callback 回调函数\n * @param {Float} quality 输出质量比例\n * @param {String} type `mime`\n */\nutil.canvas2Blob = function (canvas, callback, quality, type) {\n  var _this = this;\n  if (!HTMLCanvasElement.prototype.toBlob) {\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n      value: function (callback, type, quality) {\n        let dataUrl = this.toDataURL(type, quality);\n        callback(_this.dataUrl2Blob(dataUrl));\n      }\n    });\n  }\n  canvas.toBlob(function (blob) {\n    callback(blob);\n  }, type || 'image/jpeg', quality || 0.8);\n}\n\n/**\n * 文件上传\n * @param {String} url 上传路径\n * @param {File} file 文件对象\n * @param {Function} callback 回调函数\n */\nutil.upload = function (url, file, callback) {\n  var xhr = new XMLHttpRequest();\n  var fd = new FormData();\n  fd.append('file', file);\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      // 上传成功\n      callback && callback(xhr.responseText);\n    } else {\n      throw new Error(xhr);\n    }\n  }\n  xhr.open('POST', url, true);\n  xhr.send(fd);\n}\n\nfor (var key in util) {\n  if (util.hasOwnProperty(key)) {\n    ImageCompressor[key] = util[key];\n  }\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (true) {\n        if ( true && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {}\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n            return EXIF;\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n}.call(this));\n\n\n\n/***/ })\n/******/ ])[\"default\"];\n});"]},"metadata":{},"sourceType":"script"}