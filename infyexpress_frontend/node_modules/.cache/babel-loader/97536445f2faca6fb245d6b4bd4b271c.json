{"ast":null,"code":"import { FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST } from \"./ActionType\";\nexport const fetchServiceRequest = () => {\n  return {\n    type: FETCH_SERVICE_REQUEST\n  };\n};\nexport const fetchServiceReceived = services => {\n  return {\n    type: FETCH_SERVICE_RECEIVED,\n    services: services\n  };\n};\nexport const fetchServiceFailed = err => {\n  return {\n    type: FETCH_SERVICE_FAILED,\n    err: err\n  };\n};\nexport const fetchService = () => dispatch => {\n  dispatch(fetchServiceRequest());\n  dispatch(fetchServiceReceived([{\n    _id: \"1\",\n    name: \"International Express\",\n    psize: \"300 cm\",\n    pweight: \"20 kg\",\n    slogan: \"We send packages 'internationally' anywhere in the world, 365 days a year\"\n  }, {\n    _id: \"2\",\n    name: \"Doemstic Express\",\n    psize: \"500 cm\",\n    pweight: \"30 kg\",\n    slogan: \"We send packages 'domestically' anywhere in the India, 365 days a year\"\n  }, {\n    _id: \"3\",\n    name: \"Cold Express\",\n    psize: \"100 cm\",\n    pweight: \"15 kg\",\n    slogan: \"We send 'cold' packages anywhere in the India, 365 days a year\"\n  }, {\n    _id: \"4\",\n    name: \"Mail Express\",\n    psize: \"40 cm\",\n    pweight: \"100 g\",\n    slogan: \"We send 'mailers' and 'letters' anywhere in the India, 365 days a year\"\n  }]));\n};\nexport const fetchServiceByIdRequest = () => {\n  return {\n    type: FETCH_SERVICEBYID_REQUEST\n  };\n};\nexport const fetchServiceByIdReceived = services => {\n  return {\n    type: FETCH_SERVICEBYID_RECEIVED,\n    services: services\n  };\n};\nexport const fetchServiceByIdFailed = err => {\n  return {\n    type: FETCH_SERVICEBYID_FAILED,\n    err: err\n  };\n};\nexport const fetchServiceById = _id => dispatch => {\n  fetchService();\n  dispatch(fetchServiceByIdRequest);\n  dispatch(fetchServiceByIdReceived());\n};","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/redux/ActionCreators.js"],"names":["FETCH_SERVICE_FAILED","FETCH_SERVICE_RECEIVED","FETCH_SERVICE_REQUEST","fetchServiceRequest","type","fetchServiceReceived","services","fetchServiceFailed","err","fetchService","dispatch","_id","name","psize","pweight","slogan","fetchServiceByIdRequest","FETCH_SERVICEBYID_REQUEST","fetchServiceByIdReceived","FETCH_SERVICEBYID_RECEIVED","fetchServiceByIdFailed","FETCH_SERVICEBYID_FAILED","fetchServiceById"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,sBAA/B,EAAuDC,qBAAvD,QAAoF,cAApF;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAK;AACpC,SAAM;AACFC,IAAAA,IAAI,EAAGF;AADL,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMG,oBAAoB,GAAIC,QAAD,IAAa;AAC7C,SAAM;AACFF,IAAAA,IAAI,EAAGH,sBADL;AAEFK,IAAAA,QAAQ,EAAEA;AAFR,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAIC,GAAD,IAAQ;AACtC,SAAM;AACFJ,IAAAA,IAAI,EAAGJ,oBADL;AAEFQ,IAAAA,GAAG,EAAGA;AAFJ,GAAN;AAIH,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAD,IAAa;AAC1CA,EAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACAO,EAAAA,QAAQ,CAACL,oBAAoB,CAAC,CAAC;AAC3BM,IAAAA,GAAG,EAAE,GADsB;AAE3BC,IAAAA,IAAI,EAAG,uBAFoB;AAG3BC,IAAAA,KAAK,EAAG,QAHmB;AAI3BC,IAAAA,OAAO,EAAG,OAJiB;AAK3BC,IAAAA,MAAM,EAAG;AALkB,GAAD,EAO9B;AACIJ,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAG,kBAFX;AAGIC,IAAAA,KAAK,EAAG,QAHZ;AAIIC,IAAAA,OAAO,EAAG,OAJd;AAKIC,IAAAA,MAAM,EAAG;AALb,GAP8B,EAc9B;AACIJ,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAG,cAFX;AAGIC,IAAAA,KAAK,EAAG,QAHZ;AAIIC,IAAAA,OAAO,EAAG,OAJd;AAKIC,IAAAA,MAAM,EAAG;AALb,GAd8B,EAqB9B;AACIJ,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAG,cAFX;AAGIC,IAAAA,KAAK,EAAG,OAHZ;AAIIC,IAAAA,OAAO,EAAG,OAJd;AAKIC,IAAAA,MAAM,EAAG;AALb,GArB8B,CAAD,CAArB,CAAR;AA4BH,CA9BM;AAgCP,OAAO,MAAMC,uBAAuB,GAAG,MAAK;AACxC,SAAM;AACFZ,IAAAA,IAAI,EAAGa;AADL,GAAN;AAGH,CAJM;AAMP,OAAO,MAAMC,wBAAwB,GAAIZ,QAAD,IAAa;AACjD,SAAM;AACFF,IAAAA,IAAI,EAAGe,0BADL;AAEFb,IAAAA,QAAQ,EAAEA;AAFR,GAAN;AAIH,CALM;AAOP,OAAO,MAAMc,sBAAsB,GAAIZ,GAAD,IAAQ;AAC1C,SAAM;AACFJ,IAAAA,IAAI,EAAGiB,wBADL;AAEFb,IAAAA,GAAG,EAAGA;AAFJ,GAAN;AAIH,CALM;AAOP,OAAO,MAAMc,gBAAgB,GAAIX,GAAD,IAAUD,QAAD,IAAY;AACjDD,EAAAA,YAAY;AACZC,EAAAA,QAAQ,CAACM,uBAAD,CAAR;AAEAN,EAAAA,QAAQ,CAACQ,wBAAwB,EAAzB,CAAR;AACH,CALM","sourcesContent":["import { FETCH_SERVICE_FAILED, FETCH_SERVICE_RECEIVED, FETCH_SERVICE_REQUEST } from \"./ActionType\"\r\n\r\nexport const fetchServiceRequest = () =>{\r\n    return{\r\n        type : FETCH_SERVICE_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchServiceReceived = (services) =>{\r\n    return{\r\n        type : FETCH_SERVICE_RECEIVED,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const fetchServiceFailed = (err) =>{\r\n    return{\r\n        type : FETCH_SERVICE_FAILED,\r\n        err : err\r\n    }\r\n}\r\n\r\nexport const fetchService = ()=> (dispatch) =>{\r\n    dispatch(fetchServiceRequest());\r\n    dispatch(fetchServiceReceived([{\r\n        _id: \"1\",\r\n        name : \"International Express\",\r\n        psize : \"300 cm\",\r\n        pweight : \"20 kg\",\r\n        slogan : \"We send packages 'internationally' anywhere in the world, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        name : \"Doemstic Express\",\r\n        psize : \"500 cm\",\r\n        pweight : \"30 kg\",\r\n        slogan : \"We send packages 'domestically' anywhere in the India, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        name : \"Cold Express\",\r\n        psize : \"100 cm\",\r\n        pweight : \"15 kg\",\r\n        slogan : \"We send 'cold' packages anywhere in the India, 365 days a year\"\r\n    },\r\n    {\r\n        _id: \"4\",\r\n        name : \"Mail Express\",\r\n        psize : \"40 cm\",\r\n        pweight : \"100 g\",\r\n        slogan : \"We send 'mailers' and 'letters' anywhere in the India, 365 days a year\"\r\n    }]));\r\n}\r\n\r\nexport const fetchServiceByIdRequest = () =>{\r\n    return{\r\n        type : FETCH_SERVICEBYID_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchServiceByIdReceived = (services) =>{\r\n    return{\r\n        type : FETCH_SERVICEBYID_RECEIVED,\r\n        services: services\r\n    }\r\n}\r\n\r\nexport const fetchServiceByIdFailed = (err) =>{\r\n    return{\r\n        type : FETCH_SERVICEBYID_FAILED,\r\n        err : err\r\n    }\r\n}\r\n\r\nexport const fetchServiceById = (_id) => (dispatch)=>{\r\n    fetchService();\r\n    dispatch(fetchServiceByIdRequest);\r\n\r\n    dispatch(fetchServiceByIdReceived());\r\n}"]},"metadata":{},"sourceType":"module"}