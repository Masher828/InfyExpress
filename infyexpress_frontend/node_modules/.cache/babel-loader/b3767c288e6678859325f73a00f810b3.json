{"ast":null,"code":"import { BOOK_SERVICE_FAILED, BOOK_SERVICE_RECEIVED, BOOK_SERVICE_REQUEST, FETCH_BOOKING_REQUEST, FETCH_BOOKING_RECEIVED, FETCH_BOOKING_FAILED } from \"./ActionType\";\nconst initstate = {\n  isBooking: false,\n  isBooked: false,\n  isError: false,\n  isFetched: false,\n  isFetching: false\n};\nexport const Booking = (state = initstate, action) => {\n  switch (action.type) {\n    case BOOK_SERVICE_REQUEST:\n      return Object.assign({}, state, {\n        isBooking: true,\n        isBooked: false,\n        isError: false,\n        isFetching: false,\n        isFetched: false\n      });\n\n    case FETCH_BOOKING_REQUEST:\n      return Object.assign({}, state, {\n        isBooking: false,\n        isFetching: true,\n        isFetched: false,\n        isError: false,\n        isBooked: false\n      });\n\n    case BOOK_SERVICE_RECEIVED:\n      return Object.assign({}, state, {\n        isBooked: \"Service Booked Successfully!!!\",\n        isBooking: false\n      });\n\n    case FETCH_BOOKING_RECEIVED:\n      return Object.assign({}, state, {\n        isBooking: false,\n        isFetching: false,\n        isFetched: action.bookings,\n        isError: false\n      });\n\n    case BOOK_SERVICE_FAILED:\n      return Object.assign({}, state, {\n        isBooking: false,\n        isError: action.err\n      });\n\n    default:\n      return state;\n  }\n};\n_c = Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/redux/Booking.js"],"names":["BOOK_SERVICE_FAILED","BOOK_SERVICE_RECEIVED","BOOK_SERVICE_REQUEST","FETCH_BOOKING_REQUEST","FETCH_BOOKING_RECEIVED","FETCH_BOOKING_FAILED","initstate","isBooking","isBooked","isError","isFetched","isFetching","Booking","state","action","type","Object","assign","bookings","err"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,qBAA9B,EAAqDC,oBAArD,EAA2EC,qBAA3E,EAAkGC,sBAAlG,EAA0HC,oBAA1H,QAAsJ,cAAtJ;AAEA,MAAMC,SAAS,GAAG;AAACC,EAAAA,SAAS,EAAG,KAAb;AAAoBC,EAAAA,QAAQ,EAAG,KAA/B;AAAsCC,EAAAA,OAAO,EAAG,KAAhD;AAAuDC,EAAAA,SAAS,EAAC,KAAjE;AAAuEC,EAAAA,UAAU,EAAC;AAAlF,CAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA6B;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,oBAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,SAAS,EAAC,IAAX;AAAiBC,QAAAA,QAAQ,EAAC,KAA1B;AAAgCC,QAAAA,OAAO,EAAC,KAAxC;AAA+CE,QAAAA,UAAU,EAAC,KAA1D;AAAgED,QAAAA,SAAS,EAAC;AAA1E,OAAvB,CAAP;;AACJ,SAAKP,qBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,SAAS,EAAC,KAAX;AAAkBI,QAAAA,UAAU,EAAC,IAA7B;AAAkCD,QAAAA,SAAS,EAAC,KAA5C;AAAkDD,QAAAA,OAAO,EAAC,KAA1D;AAAiED,QAAAA,QAAQ,EAAC;AAA1E,OAAvB,CAAP;;AACJ,SAAKP,qBAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACL,QAAAA,QAAQ,EAAC,gCAAV;AAA2CD,QAAAA,SAAS,EAAC;AAArD,OAAvB,CAAP;;AACJ,SAAKH,sBAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,SAAS,EAAC,KAAX;AAAkBI,QAAAA,UAAU,EAAC,KAA7B;AAAmCD,QAAAA,SAAS,EAACI,MAAM,CAACI,QAApD;AAA6DT,QAAAA,OAAO,EAAC;AAArE,OAAvB,CAAP;;AACJ,SAAKT,mBAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,SAAS,EAAC,KAAX;AAAiBE,QAAAA,OAAO,EAACK,MAAM,CAACK;AAAhC,OAAvB,CAAP;;AACJ;AACI,aAAON,KAAP;AAZR;AAcH,CAfM;KAAMD,O","sourcesContent":["import { BOOK_SERVICE_FAILED, BOOK_SERVICE_RECEIVED, BOOK_SERVICE_REQUEST, FETCH_BOOKING_REQUEST, FETCH_BOOKING_RECEIVED, FETCH_BOOKING_FAILED } from \"./ActionType\";\r\n\r\nconst initstate = {isBooking : false, isBooked : false, isError : false, isFetched:false,isFetching:false};\r\nexport const Booking = (state = initstate, action)=>{\r\n    switch(action.type){\r\n        case BOOK_SERVICE_REQUEST:\r\n            return Object.assign({},state,{isBooking:true, isBooked:false,isError:false, isFetching:false,isFetched:false});\r\n        case FETCH_BOOKING_REQUEST:\r\n            return Object.assign({},state,{isBooking:false, isFetching:true,isFetched:false,isError:false, isBooked:false});\r\n        case BOOK_SERVICE_RECEIVED:\r\n            return Object.assign({},state,{isBooked:\"Service Booked Successfully!!!\",isBooking:false});\r\n        case FETCH_BOOKING_RECEIVED:\r\n            return Object.assign({},state,{isBooking:false, isFetching:false,isFetched:action.bookings,isError:false});\r\n        case BOOK_SERVICE_FAILED:\r\n            return Object.assign({},state,{isBooking:false,isError:action.err});\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}