{"ast":null,"code":"var _jsxFileName = \"G:\\\\Project\\\\InfyExpress (MERN)\\\\infyexpress_frontend\\\\src\\\\Components\\\\MainComponent.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './Home.js';\nimport { connect } from 'react-redux';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport ServicesList from './ServiceList.js';\nimport Service from './Service';\nimport { fetchService } from '../redux/ActionCreators.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function (state) {\n  return {\n    service: state.Service\n  };\n};\n\nvar mapDispatchToProps = function (dispatch) {\n  return {\n    fetchService: () => dispatch(fetchService())\n  };\n};\n\nclass MainComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.fetchService();\n  }\n\n  render() {\n    const ServiceWithId = ({\n      match\n    }) => {\n      return this.props.auth.isAuthenticated ? /*#__PURE__*/_jsxDEV(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish._id === match.params.dishId)[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        comments: this.props.comments.comments.filter(comment => comment.dish === match.params.dishId),\n        commentsErrMess: this.props.comments.errMess,\n        postComment: this.props.postComment,\n        favorite: this.props.favorites.favorites.dishes.some(dish => dish._id === match.params.dishId),\n        postFavorite: this.props.postFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this) : null;\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/listofservices\",\n          component: () => /*#__PURE__*/_jsxDEV(ServicesList, {\n            service: this.props.service\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/listofservices/:serviceId\",\n          component: () => /*#__PURE__*/_jsxDEV(Service, {\n            service: this.props.service,\n            serviceId: this\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));","map":{"version":3,"sources":["G:/Project/InfyExpress (MERN)/infyexpress_frontend/src/Components/MainComponent.js"],"names":["React","Switch","Route","Redirect","withRouter","Home","connect","Login","Register","Header","Footer","ServicesList","Service","fetchService","mapStateToProps","state","service","mapDispatchToProps","dispatch","MainComponent","Component","constructor","componentDidMount","props","render","ServiceWithId","match","auth","isAuthenticated","dishes","filter","dish","_id","params","dishId","isLoading","errMess","comments","comment","postComment","favorites","some","postFavorite"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport { connect } from 'react-redux';\r\nimport Login from './Login.js';\r\nimport Register from './Register.js';\r\nimport Header from './Header.js';\r\nimport Footer from './Footer.js';\r\nimport ServicesList from './ServiceList.js';\r\nimport Service from './Service';\r\nimport { fetchService } from '../redux/ActionCreators.js';\r\n\r\nvar mapStateToProps = function(state){\r\n    return {\r\n      service : state.Service\r\n    };\r\n  }\r\nvar mapDispatchToProps = function(dispatch){\r\n    return {\r\n        fetchService : ()=>dispatch(fetchService())\r\n    }\r\n  }\r\n\r\nclass MainComponent extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={}\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchService();\r\n    }\r\n\r\n    render(){\r\n        const ServiceWithId = ({match}) => {\r\n            return(\r\n              this.props.auth.isAuthenticated\r\n              ?\r\n              <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                comments={this.props.comments.comments.filter((comment) => comment.dish === match.params.dishId)}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n                favorite={this.props.favorites.favorites.dishes.some((dish) => dish._id === match.params.dishId)}\r\n                postFavorite={this.props.postFavorite}\r\n                />\r\n                :\r\n                null\r\n            );\r\n        };\r\n        return(\r\n            <>\r\n                <Header />\r\n                <Switch>\r\n                    <Route  exact path=\"/\" \r\n                            component={Home} />\r\n                    <Route  exact path=\"/login\" \r\n                            component={Login} />\r\n                    <Route  exact path=\"/register\" \r\n                            component={Register}/>\r\n                    <Route  exact path=\"/listofservices\" \r\n                            component={()=><ServicesList\r\n                                            service = {this.props.service} \r\n                                            />}/>\r\n                    <Route exact path =\"/listofservices/:serviceId\" \r\n                            component={()=><Service \r\n                                            service = {this.props.service}\r\n                                            serviceId = {this}/>}/>\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));"]},"metadata":{},"sourceType":"module"}